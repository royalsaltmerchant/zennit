{"version":3,"sources":["actions/types.js","reducers/commentReducer.js","reducers/likesReducer.js","reducers/postReducer.js","reducers/usersReducer.js","reducers/index.js","components/store.js","components/nav.js","components/about.js","components/sidebar.js","components/register.js","components/login.js","components/logout.js","actions/usersActions.js","components/account.js","actions/postActions.js","actions/commentActions.js","components/newComment.js","components/likeButton.js","actions/likesActions.js","components/posts.js","components/userPosts.js","components/singlePost.js","components/newPost.js","components/updatePost.js","components/forgotPassword.js","components/resetPassword.js","App.js","index.js"],"names":["FETCH_POSTS","FETCH_USER","FETCH_COMMENTS","FETCH_LIKES","FETCH_DISLIKES","initialState","items","item","likes","dislikes","state","action","type","payload","combineReducers","posts","users","comments","likesReducer","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","Navigation","props","this","authorization","Nav","NavItem","Link","as","to","Navbar","expand","bg","variant","collapseOnSelect","Container","width","height","className","src","alt","Brand","Toggle","aria-controls","Collapse","id","renderNavbarAccountOptions","Component","About","Sidebar","ListGroup","Item","Register","history","useHistory","event","a","preventDefault","push","username","target","value","trim","email","password","axios","method","url","data","res","console","log","Form","onSubmit","handleSubmit","Group","controlId","Label","Control","required","size","placeholder","Text","aria-describedby","muted","Button","Login","useState","setLoginStatus","alert","setAlert","alertType","setAlertType","alertText","setAlertText","status","token","localStorage","setItem","replace","go","response","useEffect","setTimeout","Alert","renderAlert","Logout","removeItem","fetchUser","dispatch","headers","getItem","then","Account","submission","setState","imageFile","imageUpload","files","formData","FormData","append","user","Media","image_file","Body","File","label","accept","name","connect","fetchPosts","fetchComments","NewComment","commentsViewable","post","content","comment","post_id","cols","fetchLikes","fetchDislikes","like","setLike","handleLike","handleDislike","style","margin","likesById","filter","dislikesById","dislike","length","renderLikesAmount","color","onClick","icon","faArrowAltCircleUp","faArrowAltCircleDown","Posts","postsViewable","userIs","prevProps","renderNewComment","date","formattedDate","require","moment","format","substr","comment_id","Object","keys","commentsById","commentUser","handleDeleteComment","map","renderDatePosted","date_posted","renderCommentEditButtons","slice","userImage","display","flexDirection","renderProfileImage","title","renderArticleContent","renderCommentsLength","renderComments","scrollHeight","scrollTop","clientHeight","onScroll","renderMorePosts","renderPostContent","UserPosts","match","params","withRouter","SinglePost","modalToggle","postUsername","handleModalToggle","renderEditButtons","Modal","show","Dialog","Header","Title","Footer","handleDeletePost","NewPost","rows","UpdatePost","handleUpdatePost","defaultValue","ResetPassword","useParams","App","setAuthorization","loginMessage","userAuthenticated","Row","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81e20439.chunk.js","sourcesContent":["export const FETCH_POSTS = 'FETCH_POSTS'\nexport const FETCH_USER = 'FETCH_USER'\nexport const FETCH_COMMENTS = 'FETCH_COMMENTS'\nexport const FETCH_LIKES = 'FETCH_LIKES'\nexport const FETCH_DISLIKES = 'FETCH_DISLIKES'","import { FETCH_COMMENTS } from '../actions/types.js'\n\nconst initialState = {\n  items: [],\n  item: {}\n}\n\nexport default function(state = initialState, action ) {\n  switch(action.type) {\n    case FETCH_COMMENTS:\n      return {\n        ...state,\n        items: action.payload\n      }\n    default:\n      return state\n  }\n}","import { FETCH_LIKES, FETCH_DISLIKES } from '../actions/types.js'\n\nconst initialState = {\n  likes: [],\n  dislikes: []\n}\n\nexport default function(state = initialState, action ) {\n  switch(action.type) {\n    case FETCH_LIKES:\n      return {\n        ...state,\n        likes: action.payload\n      }\n    case FETCH_DISLIKES:\n      return {\n        ...state,\n        dislikes: action.payload\n      }\n    default:\n      return state\n  }\n}","import { FETCH_POSTS } from '../actions/types.js'\n\nconst initialState = {\n  items: [],\n  item: {}\n}\n\nexport default function(state = initialState, action ) {\n  switch(action.type) {\n    case FETCH_POSTS:\n      return {\n        ...state,\n        items: action.payload\n      }\n    default:\n      return state\n  }\n}","import { FETCH_USER } from '../actions/types.js'\n\nconst initialState = {\n  item: {}\n}\n\nexport default function(state = initialState, action ) {\n  switch(action.type) {\n    case FETCH_USER:\n      return {\n        ...state,\n        item: action.payload\n      }\n    default:\n      return state\n  }\n}","import { combineReducers }from 'redux'\nimport commentReducer from './commentReducer'\nimport likesReducer from './likesReducer'\nimport postReducer from './postReducer'\nimport usersReducer from './usersReducer'\n\nexport default combineReducers({\n  posts: postReducer,\n  users: usersReducer,\n  comments: commentReducer,\n  likes: likesReducer,\n  dislikes: likesReducer\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from '../reducers'\nconst initialState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  rootReducer, \n  initialState,\n  compose(\n    applyMiddleware(...middleware)\n  )\n)\n\nexport default store","import React, { Component } from 'react'\nimport '../main.css'\nimport { Link } from \"react-router-dom\";\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavItem from 'react-bootstrap/NavItem';\nimport Container from 'react-bootstrap/Container'\n\nexport default class Navigation extends Component {\n  constructor(props) {\n    super(props)\n    \n  }\n\n  renderNavbarAccountOptions() {\n    if(this.props.authorization) {\n      return(\n        <Nav>\n          <NavItem >\n            <Nav.Link as={Link} to=\"/new_post\">New Post</Nav.Link>\n          </NavItem>\n          {/* <img class=\"rounded-circle nav-user-img\" src=\"{{ get_image_file(current_user.image_file) }}\" alt=\"\"></img> */}\n          <NavItem>\n            <Nav.Link as={Link} to=\"/account\">Account</Nav.Link>\n          </NavItem>\n          <NavItem>\n            <Nav.Link as={Link} to=\"/logout\">Logout</Nav.Link>\n          </NavItem>\n        </Nav>\n      )\n    } else {\n      return(\n        <Nav>\n          <NavItem >\n            <Nav.Link as={Link} to=\"/login\">Login</Nav.Link>\n          </NavItem>\n          <NavItem>\n            <Nav.Link as={Link} to=\"/register\">Register</Nav.Link>\n          </NavItem>\n        </Nav>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar expand=\"md\" bg=\"color\" variant=\"dark\" collapseOnSelect>\n          <Container>\n            <img\n              width={30}\n              height={30}\n              className=\"zencircle\"\n              src={`https://zennitapp.s3.amazonaws.com/zencircle.png`}\n              alt=\"zennit zen circle\"\n            />\n            <Navbar.Brand as={Link} className=\"mr-4\" to=\"/home\">Zennit</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"navbarToggle\" />\n            <Navbar.Collapse id=\"navbarToggle\">\n              <Nav className=\"mr-auto\">\n                <NavItem>\n                  <Nav.Link as={Link} to=\"/home\">Home</Nav.Link>\n                </NavItem>\n                {/* <NavItem>\n                  <Nav.Link as={Link} to=\"/about\">About</Nav.Link>\n                </NavItem> */}\n              </Nav>\n              {/* <!-- Navbar Right Side --> */}\n              {this.renderNavbarAccountOptions()}\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport '../main.css'\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div>\n        <h1>About Page</h1>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Nav from 'react-bootstrap/Nav'\nimport NavItem from 'react-bootstrap/NavItem'\n\nexport default class Sidebar extends Component {\n  render() {\n    return (\n      <div className=\"col-md-4\">\n        <div className=\"content-section\">\n          <h3>Expedients</h3>\n          <div className='text-muted'>Currently Under Construction\n            <ListGroup>\n              <ListGroup.Item>\n                <Link to=\"/about\">About</Link>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Link to=\"/recent_comments\">Recent Comments</Link>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Link to=\"/users\">Users</Link>\n              </ListGroup.Item>\n              {/* <ListGroup.Item>\n                <Link to=\"/about\">About</Link>\n              </ListGroup.Item> */}\n            </ListGroup>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { useState } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport '../main.css'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport axios from 'axios'\n\nexport default function Register(props) {\n  // const [value, setValue] = useState('')\n  const history = useHistory()\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    history.push(\"/login\")\n    const username = event.target.username.value.trim()\n    const email = event.target.email.value.trim()\n    const password = event.target.password.value\n\n    try {\n      const res = await axios({\n        method: 'post',\n        url: '/api/register',\n        data: {\n          username: username,\n          email: email,\n          password: password\n        }\n      })\n      console.log(res)\n    } catch (error) {\n      console.log(error)\n    }\n    \n  }\n  return (\n    <div>\n      <div className=\"content-section\">\n        <legend className=\"border-bottom mb-4\">Join Zennit!</legend>\n        <Form onSubmit={(event) => handleSubmit(event)}>\n          <Form.Group controlId=\"username\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control required\n              size=\"lg\" \n              type=\"username\" \n              placeholder=\"Username\" />\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control \n              required\n              size=\"lg\"\n              type=\"email\"\n              placeholder=\"Enter email\" />\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control \n              required\n              size=\"lg\" \n              type=\"password\" \n              placeholder=\"Password\" \n              aria-describedby=\"passwordHelpBlock\" />\n            <Form.Text id=\"passwordHelpBlock\" muted>\n              Your password must be 8-20 characters long, contain letters and numbers, and\n              must not contain spaces, special characters, or emoji.\n            </Form.Text>\n          </Form.Group>\n          <Button variant=\"outline-info\" type=\"submit\">\n            Sign Up\n          </Button>\n        </Form>\n      </div>\n      <div className=\"border-top pt-3\">\n        <small className=\"text-muted\">\n          Already Have An Account? <Link className=\"ml-2\" to=\"/login\">Sign In</Link>\n        </small>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";  \nimport axios from 'axios'\n\nimport '../main.css'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\n\nexport default function Login() {\n  const [loginStatus, setLoginStatus] = useState(false)\n  const [alert, setAlert] = useState(false)\n  const [alertType, setAlertType] = useState('warning')\n  const [alertText, setAlertText] = useState('Something went wrong, please try again later!')\n  const history = useHistory()\n\n  useEffect(() => {\n      if(alert) {\n        setTimeout(() => {\n          setAlert(false)\n        }, 5000)\n      }\n  });\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    const email = event.target.email.value.trim()\n    const password = event.target.password.value\n\n    try {\n      const res = await axios({\n        method: 'post',\n        url: '/api/login',\n        data: {\n          email: email,\n          password: password\n        }\n      })\n      console.log(res)\n      if (res.status === 200) {\n        const token = res.data.token\n        localStorage.setItem(\"token\", \"Bearer \" + token)\n        localStorage.setItem(\"loginMessage\", true)\n        setLoginStatus(true)\n        history.replace(\"/\")\n        history.go(\"/\")\n      } else {\n        setLoginStatus(false)\n        setAlert(true)\n        setAlertType('warning')\n        setAlertText('Something went wrong, please try again later!')\n      }\n    } catch (error) {\n      setLoginStatus(false)\n      console.log(error.response)\n      if(error.response.status === 400) {\n        setAlert(true)\n        setAlertType('warning')\n        setAlertText('Incorrect Email or Password')\n      } else {\n        setAlert(true)\n        setAlertType('danger')\n        setAlertText('Something went wrong, please try again later!')\n      }\n    }\n    \n  }\n\n  function renderAlert() {\n    if(alert) {\n      return(\n        <Alert variant={alertType}>\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  return (\n    <div>\n      {renderAlert()}\n      <div className=\"content-section\">\n        <legend className=\"border-bottom mb-4\">Login</legend>\n        <Form onSubmit={(event) => handleSubmit(event)}>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control \n              required\n              size=\"lg\"\n              type=\"email\"\n              placeholder=\"Account Email\" />\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control \n              required\n              size=\"lg\" \n              type=\"password\" \n              placeholder=\"Account Password\" />\n          </Form.Group>\n            <Button variant=\"outline-info\" type=\"submit\">\n              Login\n            </Button>\n            <small className=\"text-muted ml-2\">\n              <Link to=\"/forgot_password\">Forgot Password?</Link>\n            </small>\n        </Form>\n      </div>\n      <div className=\"border-top pt-3\">\n        <small className=\"text-muted\">\n          Need An Account? <Link className=\"ml-2\" to=\"/register\">Sign Up Here!</Link>\n        </small>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Logout() {\n  const history = useHistory()\n\n  useEffect(() => {\n    runLogout()\n  });\n\n  function runLogout() {\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"loginMessage\")\n    history.push(\"/\")\n    history.go(\"/\")\n  }\n  return (\n    <div>\n    </div>\n  )\n}\n","import { FETCH_USER } from './types'\nimport axios from 'axios'\n\nexport const fetchUser = () => dispatch => {\n  axios({\n    method: 'get',\n    url: '/api/get_user',\n    headers: {\n      \"x-access-token\": localStorage.getItem(\"token\")\n    }\n  })\n  .then(res => {\n    dispatch({\n      type: FETCH_USER,\n      payload: res.data\n    })\n  })\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from \"react-router-dom\";\n\n\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fetchUser } from '../actions/usersActions'\n\nimport Media from 'react-bootstrap/Media'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport '../main.css'\n\n\nclass Account extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      alert: false,\n      alertText: 'Something went wrong, please try again later!',\n      alertType: 'warning',\n      submission: false\n    }\n  }\n  \n  componentDidMount() {\n    this.props.fetchUser()\n  }\n\n  // when component re-renders\n  componentDidUpdate() {\n    if(this.state.submission) {\n      this.props.fetchUser()\n      this.setState({\n        submission: false\n      })\n    }\n    if(this.state.alert) {\n      setTimeout(() => {\n        this.setState({\n          alert: false\n        })\n      }, 5000)\n    }\n  }\n\n  renderAlert() {\n    const {alert, alertText, alertType} = this.state\n\n    if(alert) {\n      return(\n        <Alert variant={alertType}>\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault()\n    const email = event.target.email.value.trim()\n    const username = event.target.username.value.trim()\n    const imageFile = event.target.imageUpload.files[0]\n    var formData = new FormData(event.target)\n    formData.append(\"username\", username)\n    formData.append(\"email\", email)\n    formData.append(\"image_file\", imageFile)\n    \n    try {\n      const res = await axios({\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n          'Content-Type': 'multipart/form-data'\n        },\n        method: 'post',\n        url: '/api/update_user',\n        data: formData\n      })\n      if (res.status === 200) {\n        this.setState({\n          alert: true,\n          alertType: 'success',\n          alertText: 'Successfully updated account info!',\n          submission: true\n        })\n      } else {\n        this.setState({\n          alert: true\n        })\n      }\n    } catch (error) {\n      if(error.response) {\n        console.log(error.response)\n        if(error.response.status === 400) {\n          this.setState({\n            alert: true,\n            alertType: 'danger',\n            alertText: 'There was an issue updating your information, please try again later!'\n          })\n        } else if(error.response.status === 500) {\n          this.setState({\n            alert: true\n          })\n        }\n      } else {\n        this.setState({\n          alert: true\n        })\n      }\n    }\n    \n  }\n\n  render() {\n    const {user} = this.props\n    return (\n      <div>\n        {this.renderAlert()}\n        <div className=\"content-section\">\n          <Media>\n            <img\n              width={64}\n              height={64}\n              className=\"rounded-circle account-img\"\n              src={`https://zennitapp.s3.amazonaws.com/${user.image_file}`}\n              alt=\"Current User Profile Avatar\"\n            />\n            <Media.Body>\n              <h2 className=\"account-heading\">{user.username}</h2>\n              <p className=\"text-secondary\">{user.email}</p>\n            </Media.Body>\n          </Media>\n          <legend className=\"border-bottom mb-4\">Account Info</legend>\n          <Form onSubmit={(event) => this.handleSubmit(event)}>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n              <Form.Control \n                size=\"lg\"\n                type=\"email\"\n                placeholder=\"New Email\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control \n                size=\"lg\" \n                type=\"username\" \n                placeholder=\"New Username\" />\n            </Form.Group>\n            <Form.Group>\n              <Form.File id=\"imageUpload\" label=\"Update Profile Picture\" accept=\".png, .jpg, .jpeg\" aria-describedby=\"imageHelpBlock\" name=\"image_file\" />\n              <Form.Text id=\"imagedHelpBlock\" muted>\n                Your image must be a common format such as: .png .jpg .jpeg\n              </Form.Text>\n            </Form.Group>\n            <Button variant=\"outline-info\" type=\"submit\">\n              Update\n            </Button>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n}\n\nAccount.propTypes = {\n  fetchUser: Proptypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  user: state.users.item\n})\n\nexport default connect(mapStateToProps, { fetchUser })(Account)\n","import { FETCH_POSTS } from './types'\nimport axios from 'axios'\n\nexport const fetchPosts = () => dispatch => {\n  axios({\n    method: 'get',\n    url: '/api/posts',\n  })\n  .then(res => {\n    dispatch({\n      type: FETCH_POSTS,\n      payload: res.data\n    })\n  })\n}","import { FETCH_COMMENTS } from './types'\nimport axios from 'axios'\n\nexport const fetchComments = () => dispatch => {\n  axios({\n    method: 'get',\n    url: '/api/comments',\n  })\n  .then(res => {\n    dispatch({\n      type: FETCH_COMMENTS,\n      payload: res.data\n    })\n  })\n}","import React, { Component } from 'react'\nimport axios from 'axios'\n\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fetchComments } from '../actions/commentActions'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport Media from 'react-bootstrap/Media'\nimport Row from 'react-bootstrap/Row'\nimport '../main.css'\n\nclass NewComment extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      commentsViewable: 4,\n      alert: false,\n      alertType: 'warning',\n      alertText: 'Something went wrong, please try again later!'\n    }\n  }\n\n  async handleSubmit(event) {\n    const {post} = this.props\n    const content = event.target.comment.value.trim()\n\n    event.preventDefault()\n    try {\n      const res = await axios({\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        method: 'post',\n        url: '/api/new_comment',\n        data: {\n          post_id: post,\n          content: content\n        }\n      })\n      if (res.status === 201) {\n        this.props.fetchComments()\n        this.setState({\n          alert: true,\n          alertType: 'success',\n          alertText: 'Comment Successfully Created!'\n        })\n      } else {\n        this.setState({\n          alert: true\n        })\n      }\n    } catch (error) {\n      if(error.response) {\n        console.log(error.response)\n        if(error.response.status === 400) {\n          this.setState({\n            alert: true,\n            alertType: 'warning',\n            alertText: 'Please login to comment!'\n          })\n        } else if(error.response.status === 500) {\n          this.setState({\n            alert: true,\n            alertType: 'warning',\n            alertText: 'Something went wrong, please try again later!'\n          })\n        }\n      } else {\n        this.setState({\n          alert: true,\n          alertType: 'warning',\n          alertText: 'Something went wrong, please try again later!'\n        })\n      }\n    }\n  }\n\n  renderAlert() {\n    const {alert, alertText, alertType} = this.state\n\n    if(alert) {\n      setTimeout(() => {\n        this.setState({\n          alert: false,\n          alertType: 'warning',\n          alertText: 'Please login to comment!'\n        })\n      }, 5000)\n      return(\n        <Alert variant={alertType}>\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  render() {\n    const {user} = this.props\n\n    return (\n      <div>\n        {this.renderAlert()}\n        <Media>\n          <img\n            className=\"rounded-circle article-img\"\n            src={`https://zennitapp.s3.amazonaws.com/${user.image_file}`}\n            alt=\"current user\" \n          />\n          <Form onSubmit={(event) => this.handleSubmit(event)}>\n            <Form.Group controlId=\"comment\">\n              <Form.Control\n                required\n                as=\"textarea\"\n                size=\"md\"\n                cols=\"55\"\n                type=\"comment\" \n                placeholder=\"Expound the dharma...\" />\n            </Form.Group>\n            <Button variant=\"outline-info\" type=\"submit\">\n              Comment\n            </Button>\n          </Form>\n        </Media>\n      </div>\n    )\n  }\n}\n\nNewComment.propTypes = {\n  fetchComments: Proptypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  comments: state.comments.items\n})\n\nexport default connect(mapStateToProps, { fetchComments })(NewComment)\n","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowAltCircleUp, faArrowAltCircleDown} from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios';\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fetchLikes, fetchDislikes } from '../actions/likesActions'\n\nfunction LikeButton(props) {\n  const [like, setLike] = useState('none')\n\n  useEffect(() => {\n    const {likes, dislikes, fetchLikes, fetchDislikes} = props\n    fetchLikes()\n    fetchDislikes()\n  }, [])\n\n  function renderLikesAmount() {\n    const {likes, dislikes, fetchLikes, fetchDislikes, post} = props\n    const likesById = likes.filter((like) => {\n      if(like.post_id == post) {\n        return true\n      }\n    })\n    const dislikesById = dislikes.filter((dislike) => {\n      if(dislike.post_id == post) {\n        return true\n      }\n    })\n    const amount = likesById.length - dislikesById.length\n\n\n    return amount\n  }\n\n  async function handleLike() {\n    const {post, fetchLikes, fetchDislikes} = props\n\n    if(like === 'none' || like === 'dislike') {\n      try {\n        const res = await axios({\n          method: 'post',\n          url: '/api/add_like',\n          data: {\n            post_id: post\n          }\n        })\n        if(res.status === 201) {\n          setLike('like')\n          fetchLikes()\n          fetchDislikes()\n        }\n      } catch(error) {\n        console.log(error)\n      }\n    }\n    if(like === 'like') {\n      try {\n        const res = await axios({\n          method: 'post',\n          url: '/api/remove_like'\n        })\n        if(res.status === 200) {\n          setLike('none')\n          fetchLikes()\n          fetchDislikes()\n        }\n      } catch(error) {\n        console.log(error)\n      }\n    }\n    if(like === 'dislike') {\n      try {\n        const res = await axios({\n          method: 'post',\n          url: '/api/remove_dislike'\n        })\n        if(res.status === 200) {\n          setLike('none')\n          fetchLikes()\n          fetchDislikes()\n        }\n      } catch(error) {\n        console.log(error)\n      }\n    }\n  }\n\n  async function handleDislike() {\n    const {post, fetchLikes, fetchDislikes} = props\n\n    if(like === 'none' || like === 'like') {\n      try {\n        const res = await axios({\n          method: 'post',\n          url: '/api/add_dislike',\n          data: {\n            post_id: post\n          }\n        })\n        if(res.status === 201) {\n          setLike('dislike')\n          fetchLikes()\n          fetchDislikes()\n        }\n      } catch(error) {\n        console.log(error)\n      }\n    }\n    if(like === 'dislike') {\n      try {\n        const res = await axios({\n          method: 'post',\n          url: '/api/remove_dislike'\n        })\n        if(res.status === 200) {\n          setLike('none')\n          fetchLikes()\n          fetchDislikes()\n        }\n      } catch(error) {\n        console.log(error)\n      }\n    }\n    if(like === 'like') {\n      try {\n        const res = await axios({\n          method: 'post',\n          url: '/api/remove_like'\n        })\n        if(res.status === 200) {\n          setLike('none')\n          fetchLikes()\n          fetchDislikes()\n        }\n      } catch(error) {\n        console.log(error)\n      }\n    }\n  }\n\n  function renderLikeButtons() {\n    if(like === 'like') {\n      return(\n        <div className=\"like-buttons\">\n          <div style={{color: 'purple'}} onClick={() => handleLike()}><FontAwesomeIcon icon={faArrowAltCircleUp} size=\"2x\" /></div>\n          <div onClick={() => handleDislike()}><FontAwesomeIcon icon={faArrowAltCircleDown} size=\"2x\" /></div>\n        </div>\n      )\n    } else if(like === 'dislike') {\n      return(\n        <div className=\"like-buttons\">\n          <div onClick={() => handleLike()}><FontAwesomeIcon icon={faArrowAltCircleUp} size=\"2x\" /></div>\n          <div style={{color: 'purple'}} onClick={() => handleDislike()}><FontAwesomeIcon icon={faArrowAltCircleDown} size=\"2x\" /></div>\n        </div>\n      )\n    } else {\n      return(\n        <div className=\"like-buttons\">\n          <div onClick={() => handleLike()}><FontAwesomeIcon icon={faArrowAltCircleUp} size=\"2x\" /></div>\n          <div onClick={() => handleDislike()}><FontAwesomeIcon icon={faArrowAltCircleDown} size=\"2x\" /></div>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div>\n      <div style={{margin: '17px'}}>\n        {renderLikesAmount()}\n      </div>\n      {renderLikeButtons()}\n    </div>\n  )\n}\n\nLikeButton.propTypes = {\n  fetchLikes: Proptypes.func.isRequired,\n  likes: Proptypes.array.isRequired,\n  fetchDislikes: Proptypes.func.isRequired,\n  dislikes: Proptypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n  likes: state.likes.likes,\n  dislikes: state.likes.dislikes\n})\n\nexport default connect(mapStateToProps, { fetchLikes, fetchDislikes })(LikeButton)\n","import { FETCH_LIKES, FETCH_DISLIKES } from './types'\nimport axios from 'axios'\n\nexport const fetchLikes = () => dispatch => {\n  axios({\n    method: 'get',\n    url: '/api/likes',\n  })\n  .then(res => {\n    dispatch({\n      type: FETCH_LIKES,\n      payload: res.data\n    })\n  })\n}\n\nexport const fetchDislikes = () => dispatch => {\n  axios({\n    method: 'get',\n    url: '/api/dislikes',\n  })\n  .then(res => {\n    dispatch({\n      type: FETCH_DISLIKES,\n      payload: res.data\n    })\n  })\n}","import React, { Component } from 'react'\nimport { HashLink as Link } from 'react-router-hash-link'\nimport axios from 'axios'\n\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fetchPosts } from '../actions/postActions'\nimport { fetchUser } from '../actions/usersActions'\nimport { fetchComments } from '../actions/commentActions'\n\nimport NewComment from './newComment.js'\nimport LikeButton from './likeButton.js'\n\nimport Media from 'react-bootstrap/Media'\nimport Button from 'react-bootstrap/Button'\nimport '../main.css'\n\nclass Posts extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      postsViewable: 4,\n      commentsViewable: 4,\n      userIs: false\n    }\n  }\n\n  componentDidMount() {\n    const {fetchPosts, fetchComments} = this.props\n\n    fetchPosts()\n    fetchComments()\n  }\n\n  componentDidUpdate(prevProps) {\n    const {user, fetchUser, fetchComments, authorization, comments} = this.props\n\n    if(prevProps.authorization !== authorization) {\n      fetchUser()\n    }\n    \n    if(prevProps.user !== user) {\n      this.renderNewComment()\n    }\n  }\n\n  renderDatePosted(date) {\n    var moment = require('moment')\n    const formattedDate = moment(date).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")\n\n    return <small className=\"text-muted\">{formattedDate}</small>\n  }\n\n  renderArticleContent(content, id) {\n    if (content.length > 1000) {\n      return(\n        <div>\n          <p className=\"article-content\">{content.substr(0, 1000)}</p>\n          <Link className=\"mr-2\" to={`/post/${id}`}>Read More</Link>\n        </div>\n      )\n    } else {\n      return(\n        <div>\n          <p className=\"article-content\">{content}</p>\n        </div>\n      )\n    }\n  }\n\n  async handleDeleteComment(id) {\n    try {\n      const res = await axios({\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        method: 'post',\n        url: '/api/delete_comment',\n        data: {\n          comment_id: id\n        }\n      })\n      if (res.status === 200) {\n        this.props.fetchComments()\n      }\n    } catch (error) {\n      console.log(error.response)\n    }\n  }\n\n  renderNewComment(post) {\n    const {user} = this.props\n\n      if(Object.keys(user).length !== 0) {\n        return(\n          <NewComment post={post} user={user} />\n        )\n      }\n  }\n\n  renderCommentsLength(post) {\n    const {comments} = this.props\n    const commentsById = comments.filter((comment) => {\n      if(comment.post_id == post) {\n        return true\n      }\n    })\n    return(\n      <div className=\"mb-3\">\n        <Link to={`/post/${post}#comment-length`}>Comments({commentsById.length})</Link>\n      </div>\n    )\n  }\n\n  renderCommentEditButtons(commentUser, id) {\n    const {username} = this.props.user\n\n    if(username === commentUser && localStorage.getItem(\"token\")) {\n      return <Button className=\"ml-auto delete-comment\" onClick={() => this.handleDeleteComment(id)} variant=\"outline-danger\" size=\"sm\"><span>&times;</span></Button>\n    }\n  }\n\n  renderComments(post) {\n    const {comments} = this.props\n    const {commentsViewable} = this.state\n    const commentsById = comments.filter((comment) => {\n      if(comment.post_id == post) {\n        return true\n      }\n    })\n\n    const commentsByPost = commentsById.map(comment => (\n      <div key={comment.id}>\n        {/* <img\n            className=\"rounded-circle article-img\"\n            src={`https://zennitapp.s3.amazonaws.com/${comment['user.image_file']}`}\n            alt=\"current user\" \n          /> */}\n        <div className=\"comment-content\">\n          <div className=\"comment-head\">\n            <Link className=\"mr-2\" to={`/user_posts/${comment['user.username']}`}>{comment['user.username']}</Link>\n            {this.renderDatePosted(comment.date_posted)}\n            {this.renderCommentEditButtons(comment['user.username'], comment.id)}\n          </div>\n          <hr />\n          <p className=\"article-content\">{comment.content}</p>\n        </div>\n      </div>\n    ))\n    \n    return commentsByPost.slice(0, commentsViewable)\n  }\n\n  renderProfileImage(userImage) {\n    return <img className=\"rounded-circle article-img\" src={`https://zennitapp.s3.amazonaws.com/${userImage}`} alt=\"\" />\n  }\n\n  renderPostContent() {\n    const {postsViewable} = this.state\n    const {comments} = this.props\n    const postItems = this.props.posts.map(post => (\n      <div key={post.id}>\n        <Media className=\"content-section\">\n          <div style={{display: 'flex', flexDirection: 'column'}}>\n            {this.renderProfileImage(post['user.image_file'])}\n            <LikeButton post={post.id}/>\n          </div>\n          <Media.Body>\n            <div className=\"article-metadata\">\n              <Link className=\"mr-2\" to={`/user_posts/${post['user.username']}`}>{post['user.username']}</Link>\n              {this.renderDatePosted(post.date_posted)}\n            </div>\n            <h2><Link className=\"article-title\" to={`/post/${post.id}`}>{post.title}</Link></h2>\n            {this.renderArticleContent(post.content, post.id)}\n          </Media.Body>\n        </Media>\n        {this.renderCommentsLength(post.id)}\n        {this.renderComments(post.id)}\n        {this.renderNewComment(post.id)}\n        <hr />\n      </div>\n      ))\n    return postItems.slice(0, postsViewable)\n  }\n\n  renderMorePosts(event) {\n    const target = event.target\n    const {postsViewable} = this.state\n    const {posts} = this.props\n\n    if(target.scrollHeight - target.scrollTop === target.clientHeight && postsViewable !== posts.length) {\n      this.setState({\n        postsViewable: postsViewable + 2\n      }, () => {console.log(postsViewable)})\n    }\n  }\n\n  render() {\n    \n    return (\n      <div className=\"scrolling\" onScroll={(event) => this.renderMorePosts(event)}>\n        {this.renderPostContent()}\n      </div>\n    )\n  }\n}\n\nPosts.propTypes = {\n  fetchPosts: Proptypes.func.isRequired,\n  posts: Proptypes.array.isRequired,\n  fetchUser: Proptypes.func.isRequired,\n  fetchComments: Proptypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  user: state.users.item,\n  comments: state.comments.items\n})\n\nexport default connect(mapStateToProps, { fetchPosts, fetchUser, fetchComments })(Posts)","import React, { Component } from 'react'\nimport { withRouter } from \"react-router-dom\";\nimport { HashLink as Link } from 'react-router-hash-link'\nimport axios from 'axios'\n\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { fetchPosts } from '../actions/postActions'\nimport { fetchUser } from '../actions/usersActions'\nimport { fetchComments } from '../actions/commentActions'\n\nimport NewComment from './newComment.js'\n\nimport Media from 'react-bootstrap/Media'\nimport Button from 'react-bootstrap/Button'\nimport '../main.css'\n\nclass UserPosts extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      postsViewable: 4,\n      commentsViewable: 4,\n      userIs: false\n    }\n  }\n\n  componentDidMount() {\n    const {fetchPosts, fetchComments} = this.props\n\n    fetchPosts()\n    fetchComments()\n  }\n\n  componentDidUpdate(prevProps) {\n    const {user, fetchUser, fetchComments, authorization, comments} = this.props\n\n    if(prevProps.authorization !== authorization) {\n      fetchUser()\n    }\n    \n    if(prevProps.user !== user) {\n      this.renderNewComment()\n    }\n  }\n\n  renderDatePosted(date) {\n    var moment = require('moment')\n    const formattedDate = moment(date).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")\n\n    return <small className=\"text-muted\">{formattedDate}</small>\n  }\n\n  renderArticleContent(content, id) {\n    if (content.length > 1000) {\n      return(\n        <div>\n          <p className=\"article-content\">{content.substr(0, 1000)}</p>\n          <Link className=\"mr-2\" to={`/post/${id}`}>Read More</Link>\n        </div>\n      )\n    } else {\n      return(\n        <div>\n          <p className=\"article-content\">{content}</p>\n        </div>\n      )\n    }\n  }\n\n  async handleDeleteComment(id) {\n    try {\n      const res = await axios({\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        method: 'post',\n        url: '/api/delete_comment',\n        data: {\n          comment_id: id\n        }\n      })\n      if (res.status === 200) {\n        this.props.fetchComments()\n      }\n    } catch (error) {\n      console.log(error.response)\n    }\n  }\n\n  renderNewComment(post) {\n    const {user} = this.props\n\n      if(Object.keys(user).length !== 0) {\n        return(\n          <NewComment post={post} user={user} />\n        )\n      }\n  }\n\n  renderCommentsLength(post) {\n    const {comments} = this.props\n    const commentsById = comments.filter((comment) => {\n      if(comment.post_id == post) {\n        return true\n      }\n    })\n    return(\n      <div className=\"mb-3\">\n        <Link to={`/post/${post}#comment-length`}>Comments({commentsById.length})</Link>\n      </div>\n    )\n  }\n\n  renderCommentEditButtons(commentUser, id) {\n    const {username} = this.props.user\n\n    if(username === commentUser && localStorage.getItem(\"token\")) {\n      return <Button className=\"ml-auto delete-comment\" onClick={() => this.handleDeleteComment(id)} variant=\"outline-danger\" size=\"sm\"><span>&times;</span></Button>\n    }\n  }\n\n  renderComments(post) {\n    const {comments} = this.props\n    const {commentsViewable} = this.state\n    const commentsById = comments.filter((comment) => {\n      if(comment.post_id == post) {\n        return true\n      }\n    })\n\n    const commentsByPost = commentsById.map(comment => (\n      <div key={comment.id}>\n        {/* <img\n            className=\"rounded-circle article-img\"\n            src={`https://zennitapp.s3.amazonaws.com/${comment['user.image_file']}`}\n            alt=\"current user\" \n          /> */}\n        <div className=\"comment-content\">\n          <div className=\"comment-head\">\n            <Link className=\"mr-2\" to={`/user_posts/${comment['user.username']}`}>{comment['user.username']}</Link>\n            {this.renderDatePosted(comment.date_posted)}\n            {this.renderCommentEditButtons(comment['user.username'], comment.id)}\n          </div>\n          <hr />\n          <p className=\"article-content\">{comment.content}</p>\n        </div>\n      </div>\n    ))\n    \n    return commentsByPost.slice(0, commentsViewable)\n  }\n\n  renderProfileImage(userImage) {\n    return <img className=\"rounded-circle article-img\" src={`https://zennitapp.s3.amazonaws.com/${userImage}`} alt=\"\" />\n  }\n\n  renderPostContent() {\n    const {postsViewable} = this.state\n    const {username} = this.props.match.params\n    const {posts} = this.props\n    const userPosts = posts.filter((post) => {\n      if(post['user.username'] === username) {\n        return true\n      }\n    })\n    const postItems = userPosts.map(post => (\n      <div key={post.id}>\n        <Media className=\"content-section\">\n          {this.renderProfileImage(post['user.image_file'])}\n          <Media.Body>\n            <div className=\"article-metadata\">\n              <Link className=\"mr-2\" to={`/user_posts/${post['user.username']}`}>{post['user.username']}</Link>\n              {this.renderDatePosted(post.date_posted)}\n            </div>\n            <h2><Link className=\"article-title\" to={`/post/${post.id}`}>{post.title}</Link></h2>\n            {this.renderArticleContent(post.content, post.id)}\n          </Media.Body>\n        </Media>\n        {this.renderCommentsLength(post.id)}\n        {this.renderComments(post.id)}\n        {this.renderNewComment(post.id)}\n        <hr />\n      </div>\n      ))\n    return postItems.slice(0, postsViewable)\n  }\n\n  renderMorePosts(event) {\n    const target = event.target\n    const {postsViewable} = this.state\n    const {posts} = this.props\n\n    if(target.scrollHeight - target.scrollTop === target.clientHeight && postsViewable !== posts.length) {\n      this.setState({\n        postsViewable: postsViewable + 2\n      }, () => {console.log(postsViewable)})\n    }\n  }\n\n  render() {\n    \n    return (\n      <div className=\"scrolling\" onScroll={(event) => this.renderMorePosts(event)}>\n        {this.renderPostContent()}\n      </div>\n    )\n  }\n}\n\nUserPosts.propTypes = {\n  fetchPosts: Proptypes.func.isRequired,\n  posts: Proptypes.array.isRequired,\n  fetchUser: Proptypes.func.isRequired,\n  fetchComments: Proptypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  user: state.users.item,\n  comments: state.comments.items\n})\n\nexport default compose(withRouter, connect(mapStateToProps, { fetchPosts, fetchUser, fetchComments }))(UserPosts)\n\n    ","import React, { Component } from 'react'\nimport { Link, withRouter } from \"react-router-dom\";\nimport axios from 'axios'\n\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { fetchPosts } from '../actions/postActions'\nimport { fetchUser } from '../actions/usersActions'\nimport { fetchComments } from '../actions/commentActions'\n\nimport NewComment from './newComment.js'\n\nimport Media from 'react-bootstrap/Media'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Alert from 'react-bootstrap/Alert'\nimport '../main.css'\n\nclass SinglePost extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      modalToggle: false,\n      alert: false,\n      alertText: 'Something went wrong, please try again later!',\n      alertType: 'warning',\n      commentsViewable: 4,\n      userIs: false\n    }\n  }\n\n  componentDidMount() {\n    const {fetchPosts, fetchComments} = this.props\n\n    fetchPosts()\n    fetchComments()\n  }\n\n  componentDidUpdate(prevProps) {\n    const {user, fetchUser, fetchComments, authorization, comments} = this.props\n\n    if(prevProps.authorization !== authorization) {\n      fetchUser()\n    }\n    \n    if(prevProps.user !== user) {\n      this.renderNewComment()\n    }\n  }\n\n  renderAlert() {\n    const {alert, alertType, alertText} = this.state\n\n    if(alert) {\n      return(\n        <Alert variant={alertType}>\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  handleModalToggle() {\n    const {modalToggle} = this.state\n    this.setState({\n      modalToggle: !modalToggle\n    })\n  }\n\n  async handleDeletePost() {\n    const {id} = this.props.match.params\n\n    try {\n      const res = await axios({\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        method: 'post',\n        url: '/api/delete_post',\n        data: {\n          post_id: id\n        }\n      })\n      console.log(res)\n      if (res.status === 200) {\n        localStorage.setItem(\"deletePost\", true)\n        this.props.history.replace(\"/\")\n      } else {\n        this.setState({\n          alert: true\n        })\n      }\n    } catch (error) {\n      console.log(error.response)\n      this.setState({\n        alert: true\n      })\n    }\n  }\n\n  renderDatePosted(date) {\n    var moment = require('moment')\n    const formattedDate = moment(date).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")\n\n    return <small className=\"text-muted\">{formattedDate}</small>\n  }\n\n  async handleDeleteComment(id) {\n    try {\n      const res = await axios({\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        method: 'post',\n        url: '/api/delete_comment',\n        data: {\n          comment_id: id\n        }\n      })\n      if (res.status === 200) {\n        this.props.fetchComments()\n      } \n    } catch (error) {\n      console.log(error.response)\n    }\n  }\n\n  renderNewComment(post) {\n    const {user} = this.props\n\n      if(Object.keys(user).length !== 0) {\n        return(\n          <NewComment post={post} user={user} />\n        )\n      }\n  }\n\n  renderCommentsLength(post) {\n    const {comments} = this.props\n    const commentsById = comments.filter((comment) => {\n      if(comment.post_id == post) {\n        return true\n      }\n    })\n    return <p id=\"comment-length\">Comments({commentsById.length})</p>\n  }\n\n  renderCommentEditButtons(commentUser, id) {\n    const {username} = this.props.user\n\n    if(username === commentUser && localStorage.getItem(\"token\")) {\n      return <Button className=\"ml-auto delete-comment\" onClick={() => this.handleDeleteComment(id)} variant=\"outline-danger\" size=\"sm\"><span>&times;</span></Button>\n    }\n  }\n\n  renderComments(post) {\n    const {comments} = this.props\n    const {commentsViewable} = this.state\n    const commentsById = comments.filter((comment) => {\n      if(comment.post_id == post) {\n        return true\n      }\n    })\n\n    const commentsByPost = commentsById.map(comment => (\n      <div key={comment.id}>\n        {/* <img\n            className=\"rounded-circle article-img\"\n            src={`https://zennitapp.s3.amazonaws.com/${comment['user.image_file']}`}\n            alt=\"current user\" \n          /> */}\n        <div className=\"comment-content\">\n          <div className=\"comment-head\" id=\"comment-head\">\n            <Link className=\"mr-2\" to={`/user_posts/${comment['user.username']}`}>{comment['user.username']}</Link>\n            {this.renderDatePosted(comment.date_posted)}\n            {this.renderCommentEditButtons(comment['user.username'], comment.id)}\n          </div>\n          <hr />\n          <p className=\"article-content\">{comment.content}</p>\n        </div>\n      </div>\n    ))\n    \n    // return commentsByPost.slice(0, commentsViewable)\n    return commentsByPost\n  }\n\n  renderProfileImage(userImage) {\n    return <img className=\"rounded-circle article-img\" src={`https://zennitapp.s3.amazonaws.com/${userImage}`} alt=\"\" />\n  }\n\n  renderEditButtons(postUsername) {\n    const {username} = this.props.user\n    const {id} = this.props.match.params\n\n    if(username === postUsername && localStorage.getItem(\"token\")) {\n      return(\n        <div>\n          <Button as={Link} className=\"mt-1 mb-1\" size=\"sm\" to={`/update/post/${id}`}>Update</Button>\n          <Button onClick={() => this.handleModalToggle()} className=\"m-1\" variant=\"danger\" size=\"sm\">Delete</Button>\n        </div>\n      )\n    }\n  }\n\n  renderPostContent() {\n    const {id} = this.props.match.params\n    const {posts} = this.props\n    const postsById = posts.filter((post) => {\n      if(post.id == id) {\n        return true\n      }\n    })\n    const postItems = postsById.map(post => (\n      <div key={post.id}>\n        <Media className=\"content-section\">\n          {this.renderProfileImage(post['user.image_file'])}\n          <Media.Body>\n            <div className=\"article-metadata\">\n              <Link className=\"mr-2\" to={`/user_posts/${post['user.username']}`}>{post['user.username']}</Link>\n              {this.renderDatePosted(post.date_posted)}\n              {this.renderEditButtons(post['user.username'])}\n            </div>\n            <h2><Link className=\"article-title\" to={`/post/${post.id}`}>{post.title}</Link></h2>\n            <p className=\"article-content\">{post['content']}</p>\n          </Media.Body>\n        </Media>\n        {this.renderCommentsLength(post.id)}\n        {this.renderComments(post.id)}\n        {this.renderNewComment(post.id)}\n        <hr />\n      </div>\n      ))\n    return postItems\n  }\n\n  render() {\n    const {modalToggle} = this.state\n\n    return (\n      <div>\n        {this.renderAlert()}\n        {this.renderPostContent()}\n        {/* <!-- Modal --> */}\n        <Modal className=\"fade\" show={modalToggle}>\n          <Modal.Dialog>\n            <Modal.Header>\n              <Modal.Title>Delete Post?</Modal.Title>\n              <Button onClick={() => this.handleModalToggle()} variant=\"close\">\n                <span>&times;</span>\n              </Button>\n            </Modal.Header>\n            <Modal.Footer>\n              <Button onClick={() => this.handleModalToggle()} variant=\"secondary\">Close</Button>\n              <Button onClick={() => this.handleDeletePost()} variant=\"danger\" value=\"delete\" type=\"submit\">Delete</Button>\n            </Modal.Footer>\n          </Modal.Dialog>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nSinglePost.propTypes = {\n  fetchPosts: Proptypes.func.isRequired,\n  posts: Proptypes.array.isRequired,\n  fetchUser: Proptypes.func.isRequired,\n  fetchComments: Proptypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  user: state.users.item,\n  comments: state.comments.items\n})\n\nexport default compose(withRouter, connect(mapStateToProps, { fetchPosts, fetchUser, fetchComments }))(SinglePost)","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from 'axios'\n\nimport '../main.css'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\n\nexport default function NewPost() {\n  const [alert, setAlert] = useState(false)\n  const [alertText, setAlertText] = useState('Something went wrong, please try again later!')\n  const history = useHistory()\n\n  useEffect(() => {\n    // localStorage.removeItem(\"loginMessage\")\n    if(alert) {\n      if(alert) {\n        setTimeout(() => {\n          setAlert(false)\n        }, 5000)\n      }\n    }\n  });\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    const title = event.target.title.value.trim()\n    const content = event.target.content.value.trim()\n\n    try {\n      const res = await axios({\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        method: 'post',\n        url: '/api/new_post',\n        data: {\n          title: title,\n          content: content\n        }\n      })\n      console.log(res)\n      if (res.status === 201) {\n        localStorage.setItem(\"newPost\", true)\n        history.replace(\"/\")\n      } else {\n        setAlert(true)\n      }\n    } catch (error) {\n      console.log(error.response)\n      setAlert(true)\n    }\n    \n  }\n\n  function renderAlert() {\n    if(alert) {\n      return(\n        <Alert variant=\"danger\">\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  return (\n    <div>\n      {renderAlert()}\n      <div className=\"content-section\">\n        <legend className=\"border-bottom mb-4\">New Post</legend>\n          <Form onSubmit={(event) => handleSubmit(event)}>\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control \n                required\n                size=\"lg\"\n                type=\"title\"\n                placeholder=\"Post Title\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Content</Form.Label>\n              <Form.Control \n                required\n                as=\"textarea\"\n                rows=\"10\"\n                size=\"lg\" \n                type=\"content\" \n                placeholder=\"Post Content\" />\n            </Form.Group>\n              <Button variant=\"outline-info\" type=\"submit\">\n                Post\n              </Button>\n          </Form>\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport { Link, withRouter } from \"react-router-dom\";\nimport axios from 'axios'\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { fetchPosts } from '../actions/postActions'\nimport { fetchUser } from '../actions/usersActions'\n\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport Form from 'react-bootstrap/Form'\nimport '../main.css'\n\nclass UpdatePost extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      modalToggle: false,\n      alert: false,\n      alertText: 'Something went wrong, please try again later!',\n      alertType: 'warning'\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchPosts()\n    this.props.fetchUser()\n  }\n\n  componentDidUpdate() {\n    const {alert} = this.state\n\n    if(alert) {\n      setTimeout(() => {\n        this.setState({\n          alert: false\n        })\n      }, 5000)\n    }\n  }\n\n  renderAlert() {\n    const {alert, alertType, alertText} = this.state\n\n    if(alert) {\n      return(\n        <Alert variant={alertType}>\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  async handleUpdatePost(event) {\n    event.preventDefault()\n    const {id} = this.props.match.params\n    const title = event.target.title.value.trim()\n    const content = event.target.content.value.trim()\n\n    try {\n      const res = await axios({\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        method: 'post',\n        url: '/api/update_post',\n        data: {\n          title: title,\n          content: content,\n          post_id: id\n        }\n      })\n      console.log(res)\n      if (res.status === 200) {\n        localStorage.setItem(\"updatePost\", true)\n        this.props.history.replace(\"/\")\n      } else {\n        this.setState({\n          alert: true\n        })\n      }\n    } catch (error) {\n      console.log(error.response)\n      this.setState({\n        alert: true\n      })\n    }\n  }\n\n  renderPostContent() {\n    const {id} = this.props.match.params\n    const {posts} = this.props\n    const postsById = posts.filter((post) => {\n      if(post.id == id) {\n        return true\n      }\n    })\n    const updatePostForm = postsById.map(post => (\n      <div className=\"content-section\" key={post.id}>\n          <legend className=\"border-bottom mb-4\">{post.title}</legend>\n          <Form onSubmit={(event) => this.handleUpdatePost(event)}>\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control \n                required\n                size=\"lg\"\n                type=\"title\"\n                defaultValue={post.title} />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Content</Form.Label>\n              <Form.Control \n                required\n                as=\"textarea\"\n                rows=\"10\"\n                size=\"lg\" \n                type=\"content\" \n                defaultValue={post.content} />\n            </Form.Group>\n              <Button variant=\"outline-info\" type=\"submit\">\n                Update\n              </Button>\n          </Form>\n        </div>\n    ))\n    return updatePostForm\n  }\n\n  render() {\n\n    return (\n      <div>\n        {this.renderAlert()}\n        {this.renderPostContent()}\n        \n    </div>\n    )\n  }\n}\n\nUpdatePost.propTypes = {\n  fetchPosts: Proptypes.func.isRequired,\n  posts: Proptypes.array.isRequired,\n  fetchUser: Proptypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  user: state.users.item\n})\n\nexport default compose(withRouter,connect(mapStateToProps, { fetchPosts, fetchUser }))(UpdatePost)","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";  \nimport axios from 'axios'\n\nimport '../main.css'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\n\nexport default function Login() {\n  const [loginStatus, setLoginStatus] = useState(false)\n  const [alert, setAlert] = useState(false)\n  const [alertText, setAlertText] = useState('Something went wrong, please try again later!')\n  const [alertType, setAlertType] = useState('warning')\n  const history = useHistory()\n\n  useEffect(() => {\n      if(alert) {\n        setTimeout(() => {\n          setAlert(false)\n        }, 9000)\n      }\n  });\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    const email = event.target.email.value.trim()\n\n    try {\n      const res = await axios({\n        method: 'post',\n        url: '/api/request_reset_email',\n        data: {\n          email: email\n        }\n      })\n      console.log(res)\n      if (res.status === 200) {\n        setAlert(true)\n        setAlertType('success')\n        setAlertText('Request Sent! Check Email For Password Reset Link!')\n      } else {\n        setAlert(true)\n        setAlertType('warning')\n        setAlertText('Something Went Wrong, Please Try Again Later!')\n      }\n    } catch (error) {\n      console.log(error.response)\n      if(error.response.status === 400) {\n        setAlert(true)\n        setAlertType('warning')\n        setAlertText('No User Found By This Email! Try Again!')\n      } else {\n        setAlert(true)\n        setAlertType('danger')\n        setAlertText('Something Went Wrong, Please Try Again Later!')\n      }\n    }\n    \n  }\n\n  function renderAlert() {\n    if(alert) {\n      return(\n        <Alert variant={alertType}>\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  return (\n    <div>\n      {renderAlert()}\n      <div className=\"content-section\">\n        <legend className=\"border-bottom mb-4\">Reset Password</legend>\n        <Form onSubmit={(event) => handleSubmit(event)}>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control \n              required\n              size=\"lg\"\n              type=\"email\"\n              placeholder=\"Account Email\" />\n          </Form.Group>\n            <Button variant=\"outline-info\" type=\"submit\">\n              Request Password Reset\n            </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useParams } from \"react-router-dom\";  \nimport axios from 'axios'\n\nimport '../main.css'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\n\nexport default function ResetPassword() {\n  const [alert, setAlert] = useState(false)\n  const [alertText, setAlertText] = useState('Something went wrong, please try again later!')\n  const [alertType, setAlertType] = useState('warning')\n  const history = useHistory()\n  const {token} = useParams()\n\n  useEffect(() => {\n      if(alert) {\n        setTimeout(() => {\n          setAlert(false)\n        }, 5000)\n      }\n  });\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    const password = event.target.password.value\n\n    try {\n      const res = await axios({\n        method: 'post',\n        url: '/api/reset_password',\n        data: {\n          password: password,\n          token: token\n        }\n      })\n      console.log(res)\n      if (res.status === 200) {\n        setAlert(true)\n        setAlertType('success')\n        setAlertText('Password Has Been Reset!')\n      } else {\n        setAlert(true)\n        setAlertType('warning')\n        setAlertText('Something Went Wrong, Please Try Again Later!')\n      }\n    } catch (error) {\n      console.log(error)\n      setAlert(true)\n      setAlertType('danger')\n      setAlertText('Something Went Wrong, Please Try Again Later!')\n    }\n    \n  }\n\n  function renderAlert() {\n    if(alert) {\n      return(\n        <Alert variant={alertType}>\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  return (\n    <div>\n      {renderAlert()}\n      <div className=\"content-section\">\n        <legend className=\"border-bottom mb-4\">New Password</legend>\n        <Form onSubmit={(event) => handleSubmit(event)}>\n          <Form.Group controlId=\"password\">\n            <Form.Label>New Password</Form.Label>\n            <Form.Control \n              required\n              size=\"lg\"\n              type=\"password\"\n              placeholder=\"New Password\" />\n          </Form.Group>\n            <Button variant=\"outline-info\" type=\"submit\">\n              Reset Password\n            </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport { Provider } from 'react-redux'\nimport store from './components/store.js'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Navigation from  './components/nav.js'\nimport About from './components/about.js'\nimport Sidebar from './components/sidebar.js'\nimport Register from './components/register.js'\nimport Login from './components/login.js'\nimport Logout from './components/logout.js'\nimport Account from './components/account.js'\nimport Posts from './components/posts.js'\nimport UserPosts from './components/userPosts.js'\nimport SinglePost from './components/singlePost.js'\nimport NewPost from './components/newPost.js'\nimport UpdatePost from './components/updatePost.js'\nimport ForgotPassword from './components/forgotPassword.js'\nimport ResetPassword from './components/resetPassword.js'\n\nimport './main.css'\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row'\nimport Alert from 'react-bootstrap/Alert'\n\n\nfunction App() {\n  const [authorization, setAuthorization] = useState(false)\n  const [alert, setAlert] = useState(false)\n  const [alertText, setAlertText] = useState('Welcome!')\n\n  const loginMessage = localStorage.getItem(\"loginMessage\")\n  const token = localStorage.getItem(\"token\")\n\n  useEffect(() => {\n    userAuthenticated()\n  }, [authorization || !token])\n\n  function renderAlert() {\n    if(alert && authorization && loginMessage) {\n      setTimeout(() => {\n        setAlert(false)\n        setAlertText(\"Welcome!\")\n        localStorage.removeItem(\"loginMessage\")\n      }, 5000)\n      return(\n        <Alert className=\"alert-home\" variant=\"success\">\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  async function userAuthenticated() {\n    if(!token) {\n      setAuthorization(false)\n    } else {\n      try {\n        const res = await axios({\n          method: 'get',\n          url: '/api/verify_jwt',\n          headers: {\n            \"x-access-token\": localStorage.getItem(\"token\")\n          }\n        })\n        if(res.status === 200) {\n          setAuthorization(true)\n          setAlert(true)\n          setAlertText('Login Successful! Welcome Back!')\n        } else {\n          console.log('Token is invalid')\n          localStorage.removeItem(\"token\")\n        }\n      } catch {\n        console.log('could not connect to authorization check')\n        localStorage.removeItem(\"token\")\n      }\n    }\n  }\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"main-body\">\n          <Navigation authorization={authorization}/>\n          <Container>\n              <Row>\n                <div className=\"col-md-8\">\n                  {renderAlert()}\n                  <Switch>\n                    <Route exact path=\"/\">\n                      <Posts authorization={authorization} />\n                    </Route>\n                    <Route path=\"/home\">\n                      <Posts authorization={authorization} />\n                    </Route>\n                    <Route path=\"/user_posts/:username\">\n                      <UserPosts authorization={authorization} />\n                    </Route>\n                    <Route path=\"/post/:id\">\n                      <SinglePost authorization={authorization} />\n                    </Route>\n                    <Route path=\"/update/post/:id\">\n                      <UpdatePost />\n                    </Route>\n                    <Route path=\"/about\">\n                      <About />\n                    </Route>\n                    <Route path=\"/account\">\n                      <Account />\n                    </Route>\n                    <Route path=\"/forgot_password\">\n                      <ForgotPassword />\n                    </Route>\n                    <Route path=\"/reset_password/:token\">\n                      <ResetPassword />\n                    </Route>\n                    <Route path=\"/register\">\n                      <Register />\n                    </Route>\n                    <Route path=\"/new_post\">\n                      <NewPost />\n                    </Route>\n                    <Route path=\"/login\">\n                      <Login />\n                    </Route>\n                    <Route path=\"/logout\">\n                      <Logout />\n                    </Route>\n                  </Switch>\n                </div>\n                <Sidebar />\n              </Row>\n            </Container>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}