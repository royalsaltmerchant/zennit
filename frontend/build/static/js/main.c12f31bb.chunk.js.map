{"version":3,"sources":["actions/types.js","reducers/commentReducer.js","reducers/likesReducer.js","reducers/postReducer.js","reducers/usersReducer.js","reducers/index.js","components/store.js","components/nav.js","components/about.js","components/sidebar.js","components/register.js","components/login.js","components/logout.js","actions/usersActions.js","components/account.js","actions/postActions.js","actions/commentActions.js","components/newComment.js","components/likeButton.js","actions/likesActions.js","components/posts.js","components/userPosts.js","components/singlePost.js","components/newPost.js","components/updatePost.js","components/forgotPassword.js","components/resetPassword.js","components/rules.js","components/resources.js","components/searchPosts.js","App.js","index.js"],"names":["FETCH_POSTS","FETCH_USER","FETCH_COMMENTS","FETCH_LIKES","FETCH_DISLIKES","initialState","items","item","likes","dislikes","state","action","type","payload","combineReducers","posts","users","comments","likesReducer","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","Navigation","props","history","useHistory","Navbar","expand","bg","variant","collapseOnSelect","Container","width","height","className","src","alt","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","NavItem","Form","onSubmit","event","preventDefault","search","target","formSearch","value","replace","handleSearch","Group","controlId","Control","size","placeholder","authorization","About","Component","Sidebar","ListGroup","Item","Register","a","push","username","trim","email","password","axios","method","url","data","res","console","log","handleSubmit","Label","required","Text","aria-describedby","muted","Button","Login","useState","setLoginStatus","alert","setAlert","alertType","setAlertType","alertText","setAlertText","status","token","localStorage","setItem","go","response","useEffect","setTimeout","Alert","renderAlert","Logout","removeItem","fetchUser","dispatch","headers","getItem","then","Account","submission","this","setState","imageFile","imageUpload","files","formData","FormData","append","user","Media","image_file","Body","File","label","accept","name","connect","fetchPosts","fetchComments","NewComment","commentsViewable","post","content","comment","post_id","cols","fetchLikes","fetchDislikes","currentUserLike","filter","like","user_id","currentUserDislike","dislike","handleLike","Object","keys","length","handleDislike","style","margin","likesById","dislikesById","renderLikesAmount","color","onClick","icon","faArrowAltCircleUp","faArrowAltCircleDown","Posts","postsViewable","userIs","prevProps","renderNewComment","Spinner","animation","date","formattedDate","require","moment","format","ReactHtmlParser","substr","comment_id","commentsById","commentUser","handleDeleteComment","map","renderDatePosted","date_posted","renderCommentEditButtons","slice","userImage","display","flexDirection","renderProfileImage","renderLikeButtons","title","renderArticleContent","renderCommentsLength","renderComments","scrollHeight","scrollTop","clientHeight","onScroll","renderMorePosts","renderLoader","renderPostContent","UserPosts","match","params","withRouter","SinglePost","modalToggle","postUsername","handleModalToggle","renderEditButtons","Modal","show","Dialog","Header","Title","Footer","handleDeletePost","NewPost","setValue","CKEditor","editor","ClassicEditor","onChange","e","getData","config","toolbar","UpdatePost","handleUpdatePost","defaultValue","handleChange","ResetPassword","useParams","Rules","Resources","href","SearchPosts","input","searchPosts","toLowerCase","JSON","stringify","includes","App","setAuthorization","loginMessage","userAuthenticated","Row","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c12f31bb.chunk.js","sourcesContent":["export const FETCH_POSTS = 'FETCH_POSTS'\nexport const FETCH_USER = 'FETCH_USER'\nexport const FETCH_COMMENTS = 'FETCH_COMMENTS'\nexport const FETCH_LIKES = 'FETCH_LIKES'\nexport const FETCH_DISLIKES = 'FETCH_DISLIKES'","import { FETCH_COMMENTS } from '../actions/types.js'\n\nconst initialState = {\n  items: [],\n  item: {}\n}\n\nexport default function(state = initialState, action ) {\n  switch(action.type) {\n    case FETCH_COMMENTS:\n      return {\n        ...state,\n        items: action.payload\n      }\n    default:\n      return state\n  }\n}","import { FETCH_LIKES, FETCH_DISLIKES } from '../actions/types.js'\n\nconst initialState = {\n  likes: [],\n  dislikes: []\n}\n\nexport default function(state = initialState, action ) {\n  switch(action.type) {\n    case FETCH_LIKES:\n      return {\n        ...state,\n        likes: action.payload\n      }\n    case FETCH_DISLIKES:\n      return {\n        ...state,\n        dislikes: action.payload\n      }\n    default:\n      return state\n  }\n}","import { FETCH_POSTS } from '../actions/types.js'\n\nconst initialState = {\n  items: [],\n  item: {}\n}\n\nexport default function(state = initialState, action ) {\n  switch(action.type) {\n    case FETCH_POSTS:\n      return {\n        ...state,\n        items: action.payload\n      }\n    default:\n      return state\n  }\n}","import { FETCH_USER } from '../actions/types.js'\n\nconst initialState = {\n  item: {}\n}\n\nexport default function(state = initialState, action ) {\n  switch(action.type) {\n    case FETCH_USER:\n      return {\n        ...state,\n        item: action.payload\n      }\n    default:\n      return state\n  }\n}","import { combineReducers }from 'redux'\nimport commentReducer from './commentReducer'\nimport likesReducer from './likesReducer'\nimport postReducer from './postReducer'\nimport usersReducer from './usersReducer'\n\nexport default combineReducers({\n  posts: postReducer,\n  users: usersReducer,\n  comments: commentReducer,\n  likes: likesReducer,\n  dislikes: likesReducer\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from '../reducers'\nconst initialState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  rootReducer, \n  initialState,\n  compose(\n    applyMiddleware(...middleware)\n  )\n)\n\nexport default store","import React, { Component } from 'react'\nimport '../main.css'\nimport { Link, useHistory } from \"react-router-dom\";\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavItem from 'react-bootstrap/NavItem';\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\n\nexport default function Navigation(props) {\n  const history = useHistory()\n\n  function renderNavbarAccountOptions() {\n    if(props.authorization) {\n      return(\n        <Nav>\n          <NavItem >\n            <Nav.Link as={Link} to=\"/new_post\">New Post</Nav.Link>\n          </NavItem>\n          {/* <img class=\"rounded-circle nav-user-img\" src=\"{{ get_image_file(current_user.image_file) }}\" alt=\"\"></img> */}\n          <NavItem>\n            <Nav.Link as={Link} to=\"/account\">Account</Nav.Link>\n          </NavItem>\n          <NavItem>\n            <Nav.Link as={Link} to=\"/logout\">Logout</Nav.Link>\n          </NavItem>\n        </Nav>\n      )\n    } else {\n      return(\n        <Nav>\n          <NavItem >\n            <Nav.Link as={Link} to=\"/login\">Login</Nav.Link>\n          </NavItem>\n          <NavItem>\n            <Nav.Link as={Link} to=\"/register\">Register</Nav.Link>\n          </NavItem>\n        </Nav>\n      )\n    }\n  }\n\n  function handleSearch(event) {\n    event.preventDefault()\n    const search = event.target.formSearch.value\n\n    history.replace(`/search/${search}`)\n  }\n\n  function renderSearchBar() {\n    return(\n      <Form className=\"form-inline justify-content-center\" onSubmit={(event) => handleSearch(event)}>\n        <Form.Group controlId=\"formSearch\">\n          <Form.Control \n            size=\"sm\"\n            type=\"search\" \n            placeholder=\"Search Posts\"\n          />\n        </Form.Group>\n      </Form>\n    )\n  }\n\n  return (\n    <div>\n      <Navbar expand=\"md\" bg=\"color\" variant=\"dark\" collapseOnSelect>\n        <Container>\n          <img\n            width={30}\n            height={30}\n            className=\"zencircle\"\n            src={`https://zennitapp.s3.amazonaws.com/zencircle.png`}\n            alt=\"zennit zen circle\"\n          />\n          <Navbar.Brand as={Link} className=\"mr-4\" to=\"/home\">Zennit</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"navbarToggle\" />\n          <Navbar.Collapse id=\"navbarToggle\">\n            <Nav className=\"mr-auto\">\n              <NavItem>\n                <Nav.Link as={Link} to=\"/home\">Home</Nav.Link>\n              </NavItem>\n              {/* <NavItem>\n                <Nav.Link as={Link} to=\"/about\">About</Nav.Link>\n              </NavItem> */}\n            </Nav>\n            {/* <!-- Navbar Right Side --> */}\n            {renderSearchBar()}\n            {renderNavbarAccountOptions()}\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport '../main.css'\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div>\n        <h1>About Zennit</h1>\n        <div className=\"content-section\">\n          <h2>A communication platform for today's social zennist!</h2>\n          <p>Zennit was born out of an appreciation for online social discussion regarding Zen. Many Zen-enthusiast online-communities have started in places like: reddit and discord... however, these places did not capture the type of niche online presence that is demanded of such a controversial and perturbing topic. This forum is dedicated to the rigorous discussion of Zen and its related content.</p>\n          <p>To echo our reddit family motto: \"The self-nature is originally complete!\"</p>\n          <p>Zen, as we understand it here, was born of the Buddhist lineage of Bodhidharma, and has passed through the minds of the Song and Tang dynasty patriarchs, so as to fill our skulls with the enlightened brilliance of the true teaching of the Buddha.</p>\n          <p>This forum is not present as an online educational resource for the history of Zen, but the users here are often willing to share their knowledge with those who seek to understand Zen's dubious past.</p>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Nav from 'react-bootstrap/Nav'\nimport NavItem from 'react-bootstrap/NavItem'\n\nexport default class Sidebar extends Component {\n  render() {\n    return (\n      <div className=\"col-md-4\">\n        <div className=\"content-section\">\n          <h3>Expedients</h3>\n          <div className='text-muted'>Currently Under Construction\n            <ListGroup>\n              <ListGroup.Item>\n                <Link to=\"/about\">About</Link>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Link to=\"/rules\">Rules</Link>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Link to=\"/resources\">Resources</Link>\n              </ListGroup.Item>\n              {/* <ListGroup.Item>\n                <Link to=\"/users_list\">Users</Link>\n              </ListGroup.Item> */}\n              {/* <ListGroup.Item>\n                <Link to=\"/about\">About</Link>\n              </ListGroup.Item> */}\n            </ListGroup>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { useState } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport '../main.css'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport axios from 'axios'\n\nexport default function Register(props) {\n  // const [value, setValue] = useState('')\n  const history = useHistory()\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    history.push(\"/login\")\n    const username = event.target.username.value.trim()\n    const email = event.target.email.value.trim()\n    const password = event.target.password.value\n\n    try {\n      const res = await axios({\n        method: 'post',\n        url: '/api/register',\n        data: {\n          username: username,\n          email: email,\n          password: password\n        }\n      })\n      console.log(res)\n    } catch (error) {\n      console.log(error)\n    }\n    \n  }\n  return (\n    <div>\n      <div className=\"content-section\">\n        <legend className=\"border-bottom mb-4\">Join Zennit!</legend>\n        <Form onSubmit={(event) => handleSubmit(event)}>\n          <Form.Group controlId=\"username\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control required\n              size=\"lg\" \n              type=\"username\" \n              placeholder=\"Username\" />\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control \n              required\n              size=\"lg\"\n              type=\"email\"\n              placeholder=\"Enter email\" />\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control \n              required\n              size=\"lg\" \n              type=\"password\" \n              placeholder=\"Password\" \n              aria-describedby=\"passwordHelpBlock\" />\n            <Form.Text id=\"passwordHelpBlock\" muted>\n              Your password must be 8-20 characters long, contain letters and numbers, and\n              must not contain spaces, special characters, or emoji.\n            </Form.Text>\n          </Form.Group>\n          <Button variant=\"outline-info\" type=\"submit\">\n            Sign Up\n          </Button>\n        </Form>\n      </div>\n      <div className=\"border-top pt-3\">\n        <small className=\"text-muted\">\n          Already Have An Account? <Link className=\"ml-2\" to=\"/login\">Sign In</Link>\n        </small>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";  \nimport axios from 'axios'\n\nimport '../main.css'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\n\nexport default function Login() {\n  const [loginStatus, setLoginStatus] = useState(false)\n  const [alert, setAlert] = useState(false)\n  const [alertType, setAlertType] = useState('warning')\n  const [alertText, setAlertText] = useState('Something went wrong, please try again later!')\n  const history = useHistory()\n\n  useEffect(() => {\n      if(alert) {\n        setTimeout(() => {\n          setAlert(false)\n        }, 5000)\n      }\n  });\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    const email = event.target.email.value.trim()\n    const password = event.target.password.value\n\n    try {\n      const res = await axios({\n        method: 'post',\n        url: '/api/login',\n        data: {\n          email: email,\n          password: password\n        }\n      })\n      console.log(res)\n      if (res.status === 200) {\n        const token = res.data.token\n        localStorage.setItem(\"token\", \"Bearer \" + token)\n        localStorage.setItem(\"loginMessage\", true)\n        setLoginStatus(true)\n        history.replace(\"/\")\n        history.go(\"/\")\n      } else {\n        setLoginStatus(false)\n        setAlert(true)\n        setAlertType('warning')\n        setAlertText('Something went wrong, please try again later!')\n      }\n    } catch (error) {\n      setLoginStatus(false)\n      console.log(error.response)\n      if(error.response.status === 400) {\n        setAlert(true)\n        setAlertType('warning')\n        setAlertText('Incorrect Email or Password')\n      } else {\n        setAlert(true)\n        setAlertType('danger')\n        setAlertText('Something went wrong, please try again later!')\n      }\n    }\n    \n  }\n\n  function renderAlert() {\n    if(alert) {\n      return(\n        <Alert variant={alertType}>\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  return (\n    <div>\n      {renderAlert()}\n      <div className=\"content-section\">\n        <legend className=\"border-bottom mb-4\">Login</legend>\n        <Form onSubmit={(event) => handleSubmit(event)}>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control \n              required\n              size=\"lg\"\n              type=\"email\"\n              placeholder=\"Account Email\" />\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control \n              required\n              size=\"lg\" \n              type=\"password\" \n              placeholder=\"Account Password\" />\n          </Form.Group>\n            <Button variant=\"outline-info\" type=\"submit\">\n              Login\n            </Button>\n            <small className=\"text-muted ml-2\">\n              <Link to=\"/forgot_password\">Forgot Password?</Link>\n            </small>\n        </Form>\n      </div>\n      <div className=\"border-top pt-3\">\n        <small className=\"text-muted\">\n          Need An Account? <Link className=\"ml-2\" to=\"/register\">Sign Up Here!</Link>\n        </small>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Logout() {\n  const history = useHistory()\n\n  useEffect(() => {\n    runLogout()\n  });\n\n  function runLogout() {\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"loginMessage\")\n    history.push(\"/\")\n    history.go(\"/\")\n  }\n  return (\n    <div>\n    </div>\n  )\n}\n","import { FETCH_USER } from './types'\nimport axios from 'axios'\n\nexport const fetchUser = () => dispatch => {\n  axios({\n    method: 'get',\n    url: '/api/get_user',\n    headers: {\n      \"x-access-token\": localStorage.getItem(\"token\")\n    }\n  })\n  .then(res => {\n    dispatch({\n      type: FETCH_USER,\n      payload: res.data\n    })\n  })\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from \"react-router-dom\";\n\n\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fetchUser } from '../actions/usersActions'\n\nimport Media from 'react-bootstrap/Media'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport '../main.css'\n\n\nclass Account extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      alert: false,\n      alertText: 'Something went wrong, please try again later!',\n      alertType: 'warning',\n      submission: false\n    }\n  }\n  \n  componentDidMount() {\n    this.props.fetchUser()\n  }\n\n  // when component re-renders\n  componentDidUpdate() {\n    if(this.state.submission) {\n      this.props.fetchUser()\n      this.setState({\n        submission: false\n      })\n    }\n    if(this.state.alert) {\n      setTimeout(() => {\n        this.setState({\n          alert: false\n        })\n      }, 5000)\n    }\n  }\n\n  renderAlert() {\n    const {alert, alertText, alertType} = this.state\n\n    if(alert) {\n      return(\n        <Alert variant={alertType}>\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault()\n    const email = event.target.email.value.trim()\n    const username = event.target.username.value.trim()\n    const imageFile = event.target.imageUpload.files[0]\n    var formData = new FormData(event.target)\n    formData.append(\"username\", username)\n    formData.append(\"email\", email)\n    formData.append(\"image_file\", imageFile)\n    \n    try {\n      const res = await axios({\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n          'Content-Type': 'multipart/form-data'\n        },\n        method: 'post',\n        url: '/api/update_user',\n        data: formData\n      })\n      if (res.status === 200) {\n        this.setState({\n          alert: true,\n          alertType: 'success',\n          alertText: 'Successfully updated account info!',\n          submission: true\n        })\n      } else {\n        this.setState({\n          alert: true\n        })\n      }\n    } catch (error) {\n      if(error.response) {\n        console.log(error.response)\n        if(error.response.status === 400) {\n          this.setState({\n            alert: true,\n            alertType: 'danger',\n            alertText: 'There was an issue updating your information, please try again later!'\n          })\n        } else if(error.response.status === 500) {\n          this.setState({\n            alert: true\n          })\n        }\n      } else {\n        this.setState({\n          alert: true\n        })\n      }\n    }\n    \n  }\n\n  render() {\n    const {user} = this.props\n    return (\n      <div>\n        {this.renderAlert()}\n        <div className=\"content-section\">\n          <Media>\n            <img\n              width={64}\n              height={64}\n              className=\"rounded-circle account-img\"\n              src={`https://zennitapp.s3.amazonaws.com/${user.image_file}`}\n              alt=\"Current User Profile Avatar\"\n            />\n            <Media.Body>\n              <h2 className=\"account-heading\">{user.username}</h2>\n              <p className=\"text-secondary\">{user.email}</p>\n            </Media.Body>\n          </Media>\n          <legend className=\"border-bottom mb-4\">Account Info</legend>\n          <Form onSubmit={(event) => this.handleSubmit(event)}>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n              <Form.Control \n                size=\"lg\"\n                type=\"email\"\n                placeholder=\"New Email\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control \n                size=\"lg\" \n                type=\"username\" \n                placeholder=\"New Username\" />\n            </Form.Group>\n            <Form.Group>\n              <Form.File id=\"imageUpload\" label=\"Update Profile Picture\" accept=\".png, .jpg, .jpeg\" aria-describedby=\"imageHelpBlock\" name=\"image_file\" />\n              <Form.Text id=\"imagedHelpBlock\" muted>\n                Your image must be a common format such as: .png .jpg .jpeg\n              </Form.Text>\n            </Form.Group>\n            <Button variant=\"outline-info\" type=\"submit\">\n              Update\n            </Button>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n}\n\nAccount.propTypes = {\n  fetchUser: Proptypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  user: state.users.item\n})\n\nexport default connect(mapStateToProps, { fetchUser })(Account)\n","import { FETCH_POSTS } from './types'\nimport axios from 'axios'\n\nexport const fetchPosts = () => dispatch => {\n  axios({\n    method: 'get',\n    url: '/api/posts',\n  })\n  .then(res => {\n    dispatch({\n      type: FETCH_POSTS,\n      payload: res.data\n    })\n  })\n}","import { FETCH_COMMENTS } from './types'\nimport axios from 'axios'\n\nexport const fetchComments = () => dispatch => {\n  axios({\n    method: 'get',\n    url: '/api/comments',\n  })\n  .then(res => {\n    dispatch({\n      type: FETCH_COMMENTS,\n      payload: res.data\n    })\n  })\n}","import React, { Component } from 'react'\nimport axios from 'axios'\n\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fetchComments } from '../actions/commentActions'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport Media from 'react-bootstrap/Media'\nimport Row from 'react-bootstrap/Row'\nimport '../main.css'\n\nclass NewComment extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      commentsViewable: 4,\n      alert: false,\n      alertType: 'warning',\n      alertText: 'Something went wrong, please try again later!'\n    }\n  }\n\n  async handleSubmit(event) {\n    const {post} = this.props\n    const content = event.target.comment.value.trim()\n\n    event.preventDefault()\n    try {\n      const res = await axios({\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        method: 'post',\n        url: '/api/new_comment',\n        data: {\n          post_id: post,\n          content: content\n        }\n      })\n      if (res.status === 201) {\n        this.props.fetchComments()\n        this.setState({\n          alert: true,\n          alertType: 'success',\n          alertText: 'Comment Successfully Created!'\n        })\n      } else {\n        this.setState({\n          alert: true\n        })\n      }\n    } catch (error) {\n      if(error.response) {\n        console.log(error.response)\n        if(error.response.status === 400) {\n          this.setState({\n            alert: true,\n            alertType: 'warning',\n            alertText: 'Please login to comment!'\n          })\n        } else if(error.response.status === 500) {\n          this.setState({\n            alert: true,\n            alertType: 'warning',\n            alertText: 'Something went wrong, please try again later!'\n          })\n        }\n      } else {\n        this.setState({\n          alert: true,\n          alertType: 'warning',\n          alertText: 'Something went wrong, please try again later!'\n        })\n      }\n    }\n  }\n\n  renderAlert() {\n    const {alert, alertText, alertType} = this.state\n\n    if(alert) {\n      setTimeout(() => {\n        this.setState({\n          alert: false,\n          alertType: 'warning',\n          alertText: 'Please login to comment!'\n        })\n      }, 5000)\n      return(\n        <Alert variant={alertType}>\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  render() {\n    const {user} = this.props\n\n    return (\n      <div>\n        {this.renderAlert()}\n        <Media>\n          <img\n            className=\"rounded-circle article-img\"\n            src={`https://zennitapp.s3.amazonaws.com/${user.image_file}`}\n            alt=\"current user\" \n          />\n          <Form onSubmit={(event) => this.handleSubmit(event)}>\n            <Form.Group controlId=\"comment\">\n              <Form.Control\n                required\n                as=\"textarea\"\n                size=\"md\"\n                cols=\"55\"\n                type=\"comment\" \n                placeholder=\"Expound the dharma...\" />\n            </Form.Group>\n            <Button variant=\"outline-info\" type=\"submit\">\n              Comment\n            </Button>\n          </Form>\n        </Media>\n      </div>\n    )\n  }\n}\n\nNewComment.propTypes = {\n  fetchComments: Proptypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  comments: state.comments.items\n})\n\nexport default connect(mapStateToProps, { fetchComments })(NewComment)\n","import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowAltCircleUp, faArrowAltCircleDown} from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios';\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fetchLikes, fetchDislikes } from '../actions/likesActions'\nimport { fetchUser } from '../actions/usersActions'\n\n\nfunction LikeButton(props) {\n  const {likes, dislikes, user, post} = props\n\n  const currentUserLike = likes.filter((like) => {\n    if(like.user_id === user.id && like.post_id === post) {\n      return true\n    }\n  })\n  const currentUserDislike = dislikes.filter((dislike) => {\n    if(dislike.user_id === user.id && dislike.post_id === post) {\n      return true\n    }\n  })\n\n  useEffect(() => {\n    const {likes, dislikes, fetchLikes, fetchDislikes} = props\n    fetchLikes()\n    fetchDislikes()\n    fetchUser()\n  }, [])\n\n\n  function renderLikesAmount() {\n    const {likes, dislikes, post} = props\n    const likesById = likes.filter((like) => {\n      if(like.post_id == post) {\n        return true\n      }\n    })\n    const dislikesById = dislikes.filter((dislike) => {\n      if(dislike.post_id == post) {\n        return true\n      }\n    })\n    const amount = likesById.length - dislikesById.length\n\n\n    return amount\n  }\n\n  async function handleLike() {\n    const {post, fetchLikes, fetchDislikes} = props\n\n    if(Object.keys(currentUserLike).length === 0 || Object.keys(currentUserDislike).length !== 0) {\n      try {\n        const res = await axios({\n          headers: {\n            \"x-access-token\": localStorage.getItem(\"token\")\n          },\n          method: 'post',\n          url: '/api/add_like',\n          data: {\n            post_id: post\n          }\n        })\n        if(res.status === 201) {\n          fetchLikes()\n          fetchDislikes()\n          fetchUser()\n        }\n      } catch(error) {\n        console.log(error)\n      }\n    }\n    if(Object.keys(currentUserLike).length !== 0) {\n      try {\n        const res = await axios({\n          headers: {\n            \"x-access-token\": localStorage.getItem(\"token\")\n          },\n          method: 'post',\n          url: '/api/remove_like'\n        })\n        if(res.status === 200) {\n          fetchLikes()\n          fetchDislikes()\n          fetchUser()\n        }\n      } catch(error) {\n        console.log(error)\n      }\n    }\n    if(Object.keys(currentUserDislike).length !== 0) {\n      try {\n        const res = await axios({\n          headers: {\n            \"x-access-token\": localStorage.getItem(\"token\")\n          },\n          method: 'post',\n          url: '/api/remove_dislike'\n        })\n        if(res.status === 200) {\n          fetchLikes()\n          fetchDislikes()\n          fetchUser()\n        }\n      } catch(error) {\n        console.log(error)\n      }\n    }\n  }\n\n  async function handleDislike() {\n    const {post, fetchLikes, fetchDislikes} = props\n\n    if(Object.keys(currentUserDislike).length === 0 || Object.keys(currentUserLike).length !== 0) {\n      try {\n        const res = await axios({\n          headers: {\n            \"x-access-token\": localStorage.getItem(\"token\")\n          },\n          method: 'post',\n          url: '/api/add_dislike',\n          data: {\n            post_id: post\n          }\n        })\n        if(res.status === 201) {\n          fetchLikes()\n          fetchDislikes()\n          fetchUser()\n        }\n      } catch(error) {\n        console.log(error)\n      }\n    }\n    if(Object.keys(currentUserDislike).length !== 0) {\n      try {\n        const res = await axios({\n          headers: {\n            \"x-access-token\": localStorage.getItem(\"token\")\n          },\n          method: 'post',\n          url: '/api/remove_dislike'\n        })\n        if(res.status === 200) {\n          fetchLikes()\n          fetchDislikes()\n          fetchUser()\n        }\n      } catch(error) {\n        console.log(error)\n      }\n    }\n    if(Object.keys(currentUserLike).length !== 0) {\n      try {\n        const res = await axios({\n          headers: {\n            \"x-access-token\": localStorage.getItem(\"token\")\n          },\n          method: 'post',\n          url: '/api/remove_like'\n        })\n        if(res.status === 200) {\n          fetchLikes()\n          fetchDislikes()\n          fetchUser()\n        }\n      } catch(error) {\n        console.log(error)\n      }\n    }\n  }\n\n  function renderLikeButtons() {\n\n    if(Object.keys(currentUserLike).length !== 0) {\n      return(\n        <div className=\"like-buttons\">\n          <div style={{color: 'purple'}} onClick={() => handleLike()}><FontAwesomeIcon icon={faArrowAltCircleUp} size=\"2x\" /></div>\n          <div onClick={() => handleDislike()}><FontAwesomeIcon icon={faArrowAltCircleDown} size=\"2x\" /></div>\n        </div>\n      )\n    } else if(Object.keys(currentUserDislike).length !== 0) {\n      return(\n        <div className=\"like-buttons\">\n          <div onClick={() => handleLike()}><FontAwesomeIcon icon={faArrowAltCircleUp} size=\"2x\" /></div>\n          <div style={{color: 'purple'}} onClick={() => handleDislike()}><FontAwesomeIcon icon={faArrowAltCircleDown} size=\"2x\" /></div>\n        </div>\n      )\n    } else {\n      return(\n        <div className=\"like-buttons\">\n          <div onClick={() => handleLike()}><FontAwesomeIcon icon={faArrowAltCircleUp} size=\"2x\" /></div>\n          <div onClick={() => handleDislike()}><FontAwesomeIcon icon={faArrowAltCircleDown} size=\"2x\" /></div>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div>\n      <div style={{margin: '17px'}}>\n        {renderLikesAmount()}\n      </div>\n      {renderLikeButtons()}\n    </div>\n  )\n}\n\nLikeButton.propTypes = {\n  fetchLikes: Proptypes.func.isRequired,\n  likes: Proptypes.array.isRequired,\n  fetchDislikes: Proptypes.func.isRequired,\n  dislikes: Proptypes.array.isRequired,\n  fetchUser: Proptypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  likes: state.likes.likes,\n  dislikes: state.likes.dislikes,\n  user: state.users.item,\n})\n\nexport default connect(mapStateToProps, { fetchLikes, fetchDislikes, fetchUser })(LikeButton)\n","import { FETCH_LIKES, FETCH_DISLIKES } from './types'\nimport axios from 'axios'\n\nexport const fetchLikes = () => dispatch => {\n  axios({\n    method: 'get',\n    url: '/api/likes',\n  })\n  .then(res => {\n    dispatch({\n      type: FETCH_LIKES,\n      payload: res.data\n    })\n  })\n}\n\nexport const fetchDislikes = () => dispatch => {\n  axios({\n    method: 'get',\n    url: '/api/dislikes',\n  })\n  .then(res => {\n    dispatch({\n      type: FETCH_DISLIKES,\n      payload: res.data\n    })\n  })\n}","import React, { Component } from 'react'\nimport { HashLink as Link } from 'react-router-hash-link'\nimport axios from 'axios'\n\nimport ReactHtmlParser from 'react-html-parser'\n\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fetchPosts } from '../actions/postActions'\nimport { fetchUser } from '../actions/usersActions'\nimport { fetchComments } from '../actions/commentActions'\n\nimport NewComment from './newComment.js'\nimport LikeButton from './likeButton.js'\n\nimport Media from 'react-bootstrap/Media'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport '../main.css'\nimport { faTableTennis } from '@fortawesome/free-solid-svg-icons'\n\nclass Posts extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      postsViewable: 4,\n      commentsViewable: 4,\n      userIs: false\n    }\n  }\n\n  componentDidMount() {\n    const {fetchPosts, fetchComments} = this.props\n\n    fetchPosts()\n    fetchComments()\n  }\n\n  componentDidUpdate(prevProps) {\n    const {user, fetchUser, fetchComments, authorization, comments} = this.props\n\n    if(prevProps.authorization !== authorization) {\n      fetchUser()\n    }\n    \n    if(prevProps.user !== user) {\n      this.renderNewComment()\n    }\n  }\n\n  renderLoader() {\n    const {posts} = this.props\n\n    if(Object.keys(posts).length === 0) {\n      return(\n        <Spinner animation=\"border\" style={{margin: '30px'}} />\n      )\n    }\n  }\n\n  renderDatePosted(date) {\n    var moment = require('moment')\n    const formattedDate = moment(date).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")\n\n    return <small className=\"text-muted\">{formattedDate}</small>\n  }\n\n  renderArticleContent(content, id) {\n    if (content.length > 1000) {\n      return(\n        <div>\n          <div className=\"article-content\">{ReactHtmlParser(content.substr(0, 1000))}</div>\n          <Link className=\"mr-2\" to={`/post/${id}`}>Read More</Link>\n        </div>\n      )\n    } else {\n      return(\n          <div className=\"article-content\">{ReactHtmlParser(content)}</div>\n      )\n    }\n  }\n\n  async handleDeleteComment(id) {\n    try {\n      const res = await axios({\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        method: 'post',\n        url: '/api/delete_comment',\n        data: {\n          comment_id: id\n        }\n      })\n      if (res.status === 200) {\n        this.props.fetchComments()\n      }\n    } catch (error) {\n      console.log(error.response)\n    }\n  }\n\n  renderNewComment(post) {\n    const {user} = this.props\n\n      if(Object.keys(user).length !== 0) {\n        return(\n          <NewComment post={post} user={user} />\n        )\n      }\n  }\n\n  renderCommentsLength(post) {\n    const {comments} = this.props\n    const commentsById = comments.filter((comment) => {\n      if(comment.post_id == post) {\n        return true\n      }\n    })\n    return(\n      <div className=\"mb-3\">\n        <Link to={`/post/${post}#comment-length`}>Comments({commentsById.length})</Link>\n      </div>\n    )\n  }\n\n  renderCommentEditButtons(commentUser, id) {\n    const {username} = this.props.user\n\n    if(username === commentUser && localStorage.getItem(\"token\")) {\n      return <Button className=\"ml-auto delete-comment\" onClick={() => this.handleDeleteComment(id)} variant=\"outline-danger\" size=\"sm\"><span>&times;</span></Button>\n    }\n  }\n\n  renderComments(post) {\n    const {comments} = this.props\n    const {commentsViewable} = this.state\n    const commentsById = comments.filter((comment) => {\n      if(comment.post_id == post) {\n        return true\n      }\n    })\n\n    const commentsByPost = commentsById.map(comment => (\n      <div key={comment.id}>\n        {/* <img\n            className=\"rounded-circle article-img\"\n            src={`https://zennitapp.s3.amazonaws.com/${comment['user.image_file']}`}\n            alt=\"current user\" \n          /> */}\n        <div className=\"comment-content\">\n          <div className=\"comment-head\">\n            <Link className=\"mr-2\" to={`/user_posts/${comment['user.username']}`}>{comment['user.username']}</Link>\n            {this.renderDatePosted(comment.date_posted)}\n            {this.renderCommentEditButtons(comment['user.username'], comment.id)}\n          </div>\n          <hr />\n          <p className=\"article-content\">{comment.content}</p>\n        </div>\n      </div>\n    ))\n    \n    return commentsByPost.slice(0, commentsViewable)\n  }\n\n  renderProfileImage(userImage) {\n    return <img className=\"rounded-circle article-img\" src={`https://zennitapp.s3.amazonaws.com/${userImage}`} alt=\"\" />\n  }\n\n  renderLikeButtons(post) {\n    const {user} = this.props\n    if(Object.keys(user).length !== 0) {\n      return(\n        <LikeButton post={post.id}/>\n      )\n    }\n  }\n\n  renderPostContent() {\n    const {postsViewable} = this.state\n    const postItems = this.props.posts.map(post => (\n      <div key={post.id}>\n        <Media className=\"content-section\">\n          <div style={{display: 'flex', flexDirection: 'column'}}>\n            {this.renderProfileImage(post['user.image_file'])}\n            {this.renderLikeButtons(post)}\n          </div>\n          <Media.Body>\n            <div className=\"article-metadata\">\n              <Link className=\"mr-2\" to={`/user_posts/${post['user.username']}`}>{post['user.username']}</Link>\n              {this.renderDatePosted(post.date_posted)}\n            </div>\n            <h2><Link className=\"article-title\" to={`/post/${post.id}`}>{post.title}</Link></h2>\n            <hr />\n            {this.renderArticleContent(post.content, post.id)}\n          </Media.Body>\n        </Media>\n        {this.renderCommentsLength(post.id)}\n        {this.renderComments(post.id)}\n        {this.renderNewComment(post.id)}\n        <hr />\n      </div>\n      ))\n    return postItems.slice(0, postsViewable)\n  }\n\n  renderMorePosts(event) {\n    const target = event.target\n    const {postsViewable} = this.state\n    const {posts} = this.props\n\n    if(target.scrollHeight - target.scrollTop === target.clientHeight && postsViewable !== posts.length) {\n      this.setState({\n        postsViewable: postsViewable + 2\n      }, () => {console.log(postsViewable)})\n    }\n  }\n\n  render() {\n    \n    return (\n      <div className=\"scrolling\" onScroll={(event) => this.renderMorePosts(event)}>\n        {this.renderLoader()}\n        {this.renderPostContent()}\n      </div>\n    )\n  }\n}\n\nPosts.propTypes = {\n  fetchPosts: Proptypes.func.isRequired,\n  posts: Proptypes.array.isRequired,\n  fetchUser: Proptypes.func.isRequired,\n  fetchComments: Proptypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  user: state.users.item,\n  comments: state.comments.items\n})\n\nexport default connect(mapStateToProps, { fetchPosts, fetchUser, fetchComments })(Posts)","import React, { Component } from 'react'\nimport { withRouter } from \"react-router-dom\";\nimport { HashLink as Link } from 'react-router-hash-link'\nimport axios from 'axios'\n\nimport ReactHtmlParser from 'react-html-parser'\n\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { fetchPosts } from '../actions/postActions'\nimport { fetchUser } from '../actions/usersActions'\nimport { fetchComments } from '../actions/commentActions'\n\nimport NewComment from './newComment.js'\nimport LikeButton from './likeButton.js'\n\nimport Media from 'react-bootstrap/Media'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport '../main.css'\n\nclass UserPosts extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      postsViewable: 4,\n      commentsViewable: 4,\n      userIs: false\n    }\n  }\n\n  componentDidMount() {\n    const {fetchPosts, fetchComments} = this.props\n\n    fetchPosts()\n    fetchComments()\n  }\n\n  componentDidUpdate(prevProps) {\n    const {user, fetchUser, fetchComments, authorization, comments} = this.props\n\n    if(prevProps.authorization !== authorization) {\n      fetchUser()\n    }\n    \n    if(prevProps.user !== user) {\n      this.renderNewComment()\n    }\n  }\n\n  renderLoader() {\n    const {posts} = this.props\n\n    if(Object.keys(posts).length === 0) {\n      return(\n        <Spinner animation=\"border\" style={{margin: '30px'}} />\n      )\n    }\n  }\n\n  renderDatePosted(date) {\n    var moment = require('moment')\n    const formattedDate = moment(date).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")\n\n    return <small className=\"text-muted\">{formattedDate}</small>\n  }\n\n  renderArticleContent(content, id) {\n    if (content.length > 1000) {\n      return(\n        <div>\n          <div className=\"article-content\">{ReactHtmlParser(content.substr(0, 1000))}</div>\n          <Link className=\"mr-2\" to={`/post/${id}`}>Read More</Link>\n        </div>\n      )\n    } else {\n      return(\n          <div className=\"article-content\">{ReactHtmlParser(content)}</div>\n      )\n    }\n  }\n\n  async handleDeleteComment(id) {\n    try {\n      const res = await axios({\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        method: 'post',\n        url: '/api/delete_comment',\n        data: {\n          comment_id: id\n        }\n      })\n      if (res.status === 200) {\n        this.props.fetchComments()\n      }\n    } catch (error) {\n      console.log(error.response)\n    }\n  }\n\n  renderNewComment(post) {\n    const {user} = this.props\n\n      if(Object.keys(user).length !== 0) {\n        return(\n          <NewComment post={post} user={user} />\n        )\n      }\n  }\n\n  renderCommentsLength(post) {\n    const {comments} = this.props\n    const commentsById = comments.filter((comment) => {\n      if(comment.post_id == post) {\n        return true\n      }\n    })\n    return(\n      <div className=\"mb-3\">\n        <Link to={`/post/${post}#comment-length`}>Comments({commentsById.length})</Link>\n      </div>\n    )\n  }\n\n  renderCommentEditButtons(commentUser, id) {\n    const {username} = this.props.user\n\n    if(username === commentUser && localStorage.getItem(\"token\")) {\n      return <Button className=\"ml-auto delete-comment\" onClick={() => this.handleDeleteComment(id)} variant=\"outline-danger\" size=\"sm\"><span>&times;</span></Button>\n    }\n  }\n\n  renderComments(post) {\n    const {comments} = this.props\n    const {commentsViewable} = this.state\n    const commentsById = comments.filter((comment) => {\n      if(comment.post_id == post) {\n        return true\n      }\n    })\n\n    const commentsByPost = commentsById.map(comment => (\n      <div key={comment.id}>\n        {/* <img\n            className=\"rounded-circle article-img\"\n            src={`https://zennitapp.s3.amazonaws.com/${comment['user.image_file']}`}\n            alt=\"current user\" \n          /> */}\n        <div className=\"comment-content\">\n          <div className=\"comment-head\">\n            <Link className=\"mr-2\" to={`/user_posts/${comment['user.username']}`}>{comment['user.username']}</Link>\n            {this.renderDatePosted(comment.date_posted)}\n            {this.renderCommentEditButtons(comment['user.username'], comment.id)}\n          </div>\n          <hr />\n          <p className=\"article-content\">{comment.content}</p>\n        </div>\n      </div>\n    ))\n    \n    return commentsByPost.slice(0, commentsViewable)\n  }\n\n  renderProfileImage(userImage) {\n    return <img className=\"rounded-circle article-img\" src={`https://zennitapp.s3.amazonaws.com/${userImage}`} alt=\"\" />\n  }\n\n  renderLikeButtons(post) {\n    const {user} = this.props\n    if(Object.keys(user).length !== 0) {\n      return(\n        <LikeButton post={post.id}/>\n      )\n    }\n  }\n\n  renderPostContent() {\n    const {postsViewable} = this.state\n    const {username} = this.props.match.params\n    const {posts} = this.props\n    const userPosts = posts.filter((post) => {\n      if(post['user.username'] === username) {\n        return true\n      }\n    })\n    const postItems = userPosts.map(post => (\n      <div key={post.id}>\n        <Media className=\"content-section\">\n          <div style={{display: 'flex', flexDirection: 'column'}}>\n            {this.renderProfileImage(post['user.image_file'])}\n            {this.renderLikeButtons(post)}\n          </div>\n          <Media.Body>\n            <div className=\"article-metadata\">\n              <Link className=\"mr-2\" to={`/user_posts/${post['user.username']}`}>{post['user.username']}</Link>\n              {this.renderDatePosted(post.date_posted)}\n            </div>\n            <h2><Link className=\"article-title\" to={`/post/${post.id}`}>{post.title}</Link></h2>\n            <hr />\n            {this.renderArticleContent(post.content, post.id)}\n          </Media.Body>\n        </Media>\n        {this.renderCommentsLength(post.id)}\n        {this.renderComments(post.id)}\n        {this.renderNewComment(post.id)}\n        <hr />\n      </div>\n      ))\n    return postItems.slice(0, postsViewable)\n  }\n\n  renderMorePosts(event) {\n    const target = event.target\n    const {postsViewable} = this.state\n    const {posts} = this.props\n\n    if(target.scrollHeight - target.scrollTop === target.clientHeight && postsViewable !== posts.length) {\n      this.setState({\n        postsViewable: postsViewable + 2\n      }, () => {console.log(postsViewable)})\n    }\n  }\n\n  render() {\n    const {username} = this.props.match.params\n\n    return (\n      <div>\n        <h1>{username}</h1>\n        {this.renderLoader()}\n        <div className=\"scrolling\" onScroll={(event) => this.renderMorePosts(event)}>\n          {this.renderPostContent()}\n        </div>\n      </div>\n    )\n  }\n}\n\nUserPosts.propTypes = {\n  fetchPosts: Proptypes.func.isRequired,\n  posts: Proptypes.array.isRequired,\n  fetchUser: Proptypes.func.isRequired,\n  fetchComments: Proptypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  user: state.users.item,\n  comments: state.comments.items\n})\n\nexport default compose(withRouter, connect(mapStateToProps, { fetchPosts, fetchUser, fetchComments }))(UserPosts)\n\n    ","import React, { Component } from 'react'\nimport { Link, withRouter } from \"react-router-dom\";\nimport axios from 'axios'\n\nimport ReactHtmlParser from 'react-html-parser'\n\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { fetchPosts } from '../actions/postActions'\nimport { fetchUser } from '../actions/usersActions'\nimport { fetchComments } from '../actions/commentActions'\n\nimport NewComment from './newComment.js'\nimport LikeButton from './likeButton.js'\n\nimport Media from 'react-bootstrap/Media'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Alert from 'react-bootstrap/Alert'\nimport Spinner from 'react-bootstrap/Spinner'\nimport '../main.css'\n\nclass SinglePost extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      modalToggle: false,\n      alert: false,\n      alertText: 'Something went wrong, please try again later!',\n      alertType: 'warning',\n      commentsViewable: 4,\n      userIs: false\n    }\n  }\n\n  componentDidMount() {\n    const {fetchPosts, fetchComments} = this.props\n\n    fetchPosts()\n    fetchComments()\n  }\n\n  componentDidUpdate(prevProps) {\n    const {user, fetchUser, fetchComments, authorization, comments} = this.props\n\n    if(prevProps.authorization !== authorization) {\n      fetchUser()\n    }\n    \n    if(prevProps.user !== user) {\n      this.renderNewComment()\n    }\n  }\n\n  renderLoader() {\n    const {posts} = this.props\n\n    if(Object.keys(posts).length === 0) {\n      return(\n        <Spinner animation=\"border\" style={{margin: '30px'}} />\n      )\n    }\n  }\n\n  renderAlert() {\n    const {alert, alertType, alertText} = this.state\n\n    if(alert) {\n      return(\n        <Alert variant={alertType}>\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  handleModalToggle() {\n    const {modalToggle} = this.state\n    this.setState({\n      modalToggle: !modalToggle\n    })\n  }\n\n  async handleDeletePost() {\n    const {id} = this.props.match.params\n\n    try {\n      const res = await axios({\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        method: 'post',\n        url: '/api/delete_post',\n        data: {\n          post_id: id\n        }\n      })\n      console.log(res)\n      if (res.status === 200) {\n        localStorage.setItem(\"deletePost\", true)\n        this.props.history.replace(\"/\")\n      } else {\n        this.setState({\n          alert: true\n        })\n      }\n    } catch (error) {\n      console.log(error.response)\n      this.setState({\n        alert: true\n      })\n    }\n  }\n\n  renderDatePosted(date) {\n    var moment = require('moment')\n    const formattedDate = moment(date).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")\n\n    return <small className=\"text-muted\">{formattedDate}</small>\n  }\n\n  async handleDeleteComment(id) {\n    try {\n      const res = await axios({\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        method: 'post',\n        url: '/api/delete_comment',\n        data: {\n          comment_id: id\n        }\n      })\n      if (res.status === 200) {\n        this.props.fetchComments()\n      } \n    } catch (error) {\n      console.log(error.response)\n    }\n  }\n\n  renderNewComment(post) {\n    const {user} = this.props\n\n      if(Object.keys(user).length !== 0) {\n        return(\n          <NewComment post={post} user={user} />\n        )\n      }\n  }\n\n  renderCommentsLength(post) {\n    const {comments} = this.props\n    const commentsById = comments.filter((comment) => {\n      if(comment.post_id == post) {\n        return true\n      }\n    })\n    return <p id=\"comment-length\">Comments({commentsById.length})</p>\n  }\n\n  renderCommentEditButtons(commentUser, id) {\n    const {username} = this.props.user\n\n    if(username === commentUser && localStorage.getItem(\"token\")) {\n      return <Button className=\"ml-auto delete-comment\" onClick={() => this.handleDeleteComment(id)} variant=\"outline-danger\" size=\"sm\"><span>&times;</span></Button>\n    }\n  }\n\n  renderComments(post) {\n    const {comments} = this.props\n    const {commentsViewable} = this.state\n    const commentsById = comments.filter((comment) => {\n      if(comment.post_id == post) {\n        return true\n      }\n    })\n\n    const commentsByPost = commentsById.map(comment => (\n      <div key={comment.id}>\n        {/* <img\n            className=\"rounded-circle article-img\"\n            src={`https://zennitapp.s3.amazonaws.com/${comment['user.image_file']}`}\n            alt=\"current user\" \n          /> */}\n        <div className=\"comment-content\">\n          <div className=\"comment-head\" id=\"comment-head\">\n            <Link className=\"mr-2\" to={`/user_posts/${comment['user.username']}`}>{comment['user.username']}</Link>\n            {this.renderDatePosted(comment.date_posted)}\n            {this.renderCommentEditButtons(comment['user.username'], comment.id)}\n          </div>\n          <hr />\n          <p className=\"article-content\">{comment.content}</p>\n        </div>\n      </div>\n    ))\n    \n    // return commentsByPost.slice(0, commentsViewable)\n    return commentsByPost\n  }\n\n  renderProfileImage(userImage) {\n    return <img className=\"rounded-circle article-img\" src={`https://zennitapp.s3.amazonaws.com/${userImage}`} alt=\"\" />\n  }\n\n  renderEditButtons(postUsername) {\n    const {username} = this.props.user\n    const {id} = this.props.match.params\n\n    if(username === postUsername && localStorage.getItem(\"token\")) {\n      return(\n        <div>\n          <Button as={Link} className=\"mt-1 mb-1\" size=\"sm\" to={`/update/post/${id}`}>Update</Button>\n          <Button onClick={() => this.handleModalToggle()} className=\"m-1\" variant=\"danger\" size=\"sm\">Delete</Button>\n        </div>\n      )\n    }\n  }\n\n  renderLikeButtons(post) {\n    const {user} = this.props\n    if(Object.keys(user).length !== 0) {\n      return(\n        <LikeButton post={post.id}/>\n      )\n    }\n  }\n\n  renderPostContent() {\n    const {id} = this.props.match.params\n    const {posts} = this.props\n    const postsById = posts.filter((post) => {\n      if(post.id == id) {\n        return true\n      }\n    })\n    const postItems = postsById.map(post => (\n      <div key={post.id}>\n        <Media className=\"content-section\">\n          <div style={{display: 'flex', flexDirection: 'column'}}>\n            {this.renderProfileImage(post['user.image_file'])}\n            {this.renderLikeButtons(post)}\n          </div>\n          <Media.Body>\n            <div className=\"article-metadata\">\n              <Link className=\"mr-2\" to={`/user_posts/${post['user.username']}`}>{post['user.username']}</Link>\n              {this.renderDatePosted(post.date_posted)}\n              {this.renderEditButtons(post['user.username'])}\n            </div>\n            <h2><Link className=\"article-title\" to={`/post/${post.id}`}>{post.title}</Link></h2>\n            <hr />\n            <div className=\"article-content\">{ReactHtmlParser(post.content)}</div>\n          </Media.Body>\n        </Media>\n        {this.renderCommentsLength(post.id)}\n        {this.renderComments(post.id)}\n        {this.renderNewComment(post.id)}\n        <hr />\n      </div>\n      ))\n    return postItems\n  }\n\n  render() {\n    const {modalToggle} = this.state\n\n    return (\n      <div>\n        {this.renderLoader()}\n        {this.renderAlert()}\n        {this.renderPostContent()}\n        {/* <!-- Modal --> */}\n        <Modal className=\"fade\" show={modalToggle}>\n          <Modal.Dialog>\n            <Modal.Header>\n              <Modal.Title>Delete Post?</Modal.Title>\n              <Button onClick={() => this.handleModalToggle()} variant=\"close\">\n                <span>&times;</span>\n              </Button>\n            </Modal.Header>\n            <Modal.Footer>\n              <Button onClick={() => this.handleModalToggle()} variant=\"secondary\">Close</Button>\n              <Button onClick={() => this.handleDeletePost()} variant=\"danger\" value=\"delete\" type=\"submit\">Delete</Button>\n            </Modal.Footer>\n          </Modal.Dialog>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nSinglePost.propTypes = {\n  fetchPosts: Proptypes.func.isRequired,\n  posts: Proptypes.array.isRequired,\n  fetchUser: Proptypes.func.isRequired,\n  fetchComments: Proptypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  user: state.users.item,\n  comments: state.comments.items\n})\n\nexport default compose(withRouter, connect(mapStateToProps, { fetchPosts, fetchUser, fetchComments }))(SinglePost)","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from 'axios'\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport '../main.css'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\n\nexport default function NewPost() {\n  const [value, setValue] = useState('')\n  const [alert, setAlert] = useState(false)\n  const [alertText, setAlertText] = useState('Something went wrong, please try again later!')\n  const history = useHistory()\n\n  useEffect(() => {\n    // localStorage.removeItem(\"loginMessage\")\n    if(alert) {\n      if(alert) {\n        setTimeout(() => {\n          setAlert(false)\n        }, 5000)\n      }\n    }\n  });\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    const title = event.target.title.value.trim()\n    const content = value.trim()\n\n    try {\n      const res = await axios({\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        method: 'post',\n        url: '/api/new_post',\n        data: {\n          title: title,\n          content: content\n        }\n      })\n      console.log(res)\n      if (res.status === 201) {\n        localStorage.setItem(\"newPost\", true)\n        history.replace(\"/\")\n      } else {\n        setAlert(true)\n      }\n    } catch (error) {\n      console.log(error.response)\n      setAlert(true)\n    }\n    \n  }\n\n  function renderAlert() {\n    if(alert) {\n      return(\n        <Alert variant=\"danger\">\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  function handleChange(e, editor) {\n    const data = editor.getData()\n    setValue(data)\n  }\n\n  return (\n    <div>\n      {renderAlert()}\n      <div className=\"content-section\">\n        <legend className=\"border-bottom mb-4\">New Post</legend>\n          <Form onSubmit={(event) => handleSubmit(event)}>\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control \n                required\n                size=\"lg\"\n                type=\"title\"\n                placeholder=\"Post Title\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Content</Form.Label>\n              <Form.Control\n                required\n                as={CKEditor}\n                type=\"content\"\n                editor={ClassicEditor}\n                onChange={handleChange}\n                data={value}\n                config={ {\n                  toolbar: ['heading', 'bold', 'italic', 'link', 'numberedList', 'bulletedList', 'blockQuote', ]\n                } }\n              />\n            </Form.Group>\n              <Button variant=\"outline-info\" type=\"submit\">\n                Post\n              </Button>\n          </Form>\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport { Link, withRouter } from \"react-router-dom\";\nimport axios from 'axios'\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { fetchPosts } from '../actions/postActions'\nimport { fetchUser } from '../actions/usersActions'\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport Form from 'react-bootstrap/Form'\nimport '../main.css'\n\nclass UpdatePost extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      modalToggle: false,\n      alert: false,\n      alertText: 'Something went wrong, please try again later!',\n      alertType: 'warning',\n      value: ''\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchPosts()\n    this.props.fetchUser()\n  }\n\n  componentDidUpdate() {\n    const {alert} = this.state\n\n    if(alert) {\n      setTimeout(() => {\n        this.setState({\n          alert: false\n        })\n      }, 5000)\n    }\n  }\n\n  renderAlert() {\n    const {alert, alertType, alertText} = this.state\n\n    if(alert) {\n      return(\n        <Alert variant={alertType}>\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  async handleUpdatePost(event) {\n    event.preventDefault()\n    const {id} = this.props.match.params\n    const title = event.target.title.value.trim()\n    const content = this.state.value.trim()\n\n    try {\n      const res = await axios({\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        method: 'post',\n        url: '/api/update_post',\n        data: {\n          title: title,\n          content: content,\n          post_id: id\n        }\n      })\n      console.log(res)\n      if (res.status === 200) {\n        localStorage.setItem(\"updatePost\", true)\n        this.props.history.replace(\"/\")\n      } else {\n        this.setState({\n          alert: true\n        })\n      }\n    } catch (error) {\n      console.log(error.response)\n      this.setState({\n        alert: true\n      })\n    }\n  }\n\n  renderPostContent() {\n    const {id} = this.props.match.params\n    const {posts} = this.props\n    const postsById = posts.filter((post) => {\n      if(post.id == id) {\n        return true\n      }\n    })\n    const updatePostForm = postsById.map(post => (\n      <div className=\"content-section\" key={post.id}>\n          <legend className=\"border-bottom mb-4\">{post.title}</legend>\n          <Form onSubmit={(event) => this.handleUpdatePost(event)}>\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control \n                required\n                size=\"lg\"\n                type=\"title\"\n                defaultValue={post.title} />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Content</Form.Label>\n              <Form.Control\n                required\n                as={CKEditor}\n                type=\"content\"\n                editor={ClassicEditor}\n                onChange={(e, editor) => this.handleChange(e, editor)}\n                data={this.state.value || post.content  }\n                config={ {\n                  toolbar: ['heading', 'bold', 'italic', 'link', 'numberedList', 'bulletedList', 'blockQuote', ]\n                } }\n              />\n            </Form.Group>\n              <Button variant=\"outline-info\" type=\"submit\">\n                Update\n              </Button>\n          </Form>\n        </div>\n    ))\n    return updatePostForm\n  }\n\n  handleChange(e, editor) {\n    const data = editor.getData()\n    this.setState({\n      value: data\n    })\n  }\n\n  render() {\n\n    return (\n      <div>\n        {this.renderAlert()}\n        {this.renderPostContent()}\n        \n    </div>\n    )\n  }\n}\n\nUpdatePost.propTypes = {\n  fetchPosts: Proptypes.func.isRequired,\n  posts: Proptypes.array.isRequired,\n  fetchUser: Proptypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  user: state.users.item\n})\n\nexport default compose(withRouter,connect(mapStateToProps, { fetchPosts, fetchUser }))(UpdatePost)","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";  \nimport axios from 'axios'\n\nimport '../main.css'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\n\nexport default function Login() {\n  const [loginStatus, setLoginStatus] = useState(false)\n  const [alert, setAlert] = useState(false)\n  const [alertText, setAlertText] = useState('Something went wrong, please try again later!')\n  const [alertType, setAlertType] = useState('warning')\n  const history = useHistory()\n\n  useEffect(() => {\n      if(alert) {\n        setTimeout(() => {\n          setAlert(false)\n        }, 9000)\n      }\n  });\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    const email = event.target.email.value.trim()\n\n    try {\n      const res = await axios({\n        method: 'post',\n        url: '/api/request_reset_email',\n        data: {\n          email: email\n        }\n      })\n      console.log(res)\n      if (res.status === 200) {\n        setAlert(true)\n        setAlertType('success')\n        setAlertText('Request Sent! Check Email For Password Reset Link!')\n      } else {\n        setAlert(true)\n        setAlertType('warning')\n        setAlertText('Something Went Wrong, Please Try Again Later!')\n      }\n    } catch (error) {\n      console.log(error.response)\n      if(error.response.status === 400) {\n        setAlert(true)\n        setAlertType('warning')\n        setAlertText('No User Found By This Email! Try Again!')\n      } else {\n        setAlert(true)\n        setAlertType('danger')\n        setAlertText('Something Went Wrong, Please Try Again Later!')\n      }\n    }\n    \n  }\n\n  function renderAlert() {\n    if(alert) {\n      return(\n        <Alert variant={alertType}>\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  return (\n    <div>\n      {renderAlert()}\n      <div className=\"content-section\">\n        <legend className=\"border-bottom mb-4\">Reset Password</legend>\n        <Form onSubmit={(event) => handleSubmit(event)}>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control \n              required\n              size=\"lg\"\n              type=\"email\"\n              placeholder=\"Account Email\" />\n          </Form.Group>\n            <Button variant=\"outline-info\" type=\"submit\">\n              Request Password Reset\n            </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useParams } from \"react-router-dom\";  \nimport axios from 'axios'\n\nimport '../main.css'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\n\nexport default function ResetPassword() {\n  const [alert, setAlert] = useState(false)\n  const [alertText, setAlertText] = useState('Something went wrong, please try again later!')\n  const [alertType, setAlertType] = useState('warning')\n  const history = useHistory()\n  const {token} = useParams()\n\n  useEffect(() => {\n      if(alert) {\n        setTimeout(() => {\n          setAlert(false)\n        }, 5000)\n      }\n  });\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    const password = event.target.password.value\n\n    try {\n      const res = await axios({\n        method: 'post',\n        url: '/api/reset_password',\n        data: {\n          password: password,\n          token: token\n        }\n      })\n      console.log(res)\n      if (res.status === 200) {\n        setAlert(true)\n        setAlertType('success')\n        setAlertText('Password Has Been Reset!')\n      } else {\n        setAlert(true)\n        setAlertType('warning')\n        setAlertText('Something Went Wrong, Please Try Again Later!')\n      }\n    } catch (error) {\n      console.log(error)\n      setAlert(true)\n      setAlertType('danger')\n      setAlertText('Something Went Wrong, Please Try Again Later!')\n    }\n    \n  }\n\n  function renderAlert() {\n    if(alert) {\n      return(\n        <Alert variant={alertType}>\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  return (\n    <div>\n      {renderAlert()}\n      <div className=\"content-section\">\n        <legend className=\"border-bottom mb-4\">New Password</legend>\n        <Form onSubmit={(event) => handleSubmit(event)}>\n          <Form.Group controlId=\"password\">\n            <Form.Label>New Password</Form.Label>\n            <Form.Control \n              required\n              size=\"lg\"\n              type=\"password\"\n              placeholder=\"New Password\" />\n          </Form.Group>\n            <Button variant=\"outline-info\" type=\"submit\">\n              Reset Password\n            </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}","import React, { Component } from 'react'\nimport '../main.css'\n\nexport default class Rules extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Rules</h1>\n        <div className=\"content-section\">\n          <h2>1. No Spam / Advertising / Self-promotion in the forums</h2>\n          <p>This forum defines spam as: unsolicited advertisement for goods, services and/or other web sites, or posts with little, or completely unrelated content. Do not spam the forums with links to your site or product, or try to self-promote your website, business or forums etc.</p>\n          <h2>2. Respect</h2>\n          <p>All posts should be professional and courteous. You have every right to disagree with your fellow community members and explain your perspective. However, you are not free to attack, degrade, insult, or otherwise belittle them or the quality of this community.</p>\n          < hr/>\n          <small>These rules are subject to change at any time when we feel it is needed. Please check here in case of changes to these rules.</small>\n\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport '../main.css'\n\nexport default class Resources extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Resources</h1>\n        <div className=\"content-section\">\n          <a href=\"https://en.wikipedia.org/wiki/Zen\">Wikipedia (zen)</a>\n          <br />\n          <a href=\"https://zenmarrow.com/\">ZenMarrow</a>\n          <br />\n          <a href=\"https://www.reddit.com/r/zen/\">Reddit r/zen</a>\n          <br />\n          <a href=\"https://terebess.hu/zen/index.html\">Terebess</a>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { withRouter } from \"react-router-dom\";\nimport { HashLink as Link } from 'react-router-hash-link'\n\nimport ReactHtmlParser from 'react-html-parser'\n\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { fetchPosts } from '../actions/postActions'\n\nimport Media from 'react-bootstrap/Media'\nimport Spinner from 'react-bootstrap/Spinner'\nimport '../main.css'\n\nclass SearchPosts extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      postsViewable: 4\n    }\n  }\n\n  componentDidMount() {\n    const {fetchPosts} = this.props\n\n    fetchPosts()\n  }\n\n  renderLoader() {\n    const {posts} = this.props\n\n    if(Object.keys(posts).length === 0) {\n      return(\n        <Spinner animation=\"border\" style={{margin: '30px'}} />\n      )\n    }\n  }\n\n  renderDatePosted(date) {\n    var moment = require('moment')\n    const formattedDate = moment(date).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")\n\n    return <small className=\"text-muted\">{formattedDate}</small>\n  }\n\n  renderArticleContent(content, id) {\n    if (content.length > 1000) {\n      return(\n        <div>\n          <div className=\"article-content\">{ReactHtmlParser(content.substr(0, 1000))}</div>\n          <Link className=\"mr-2\" to={`/post/${id}`}>Read More</Link>\n        </div>\n      )\n    } else {\n      return(\n          <div className=\"article-content\">{ReactHtmlParser(content)}</div>\n      )\n    }\n  }\n\n  renderProfileImage(userImage) {\n    return <img className=\"rounded-circle article-img\" src={`https://zennitapp.s3.amazonaws.com/${userImage}`} alt=\"\" />\n  }\n\n  renderPostContent() {\n    const {postsViewable} = this.state\n    const {input} = this.props.match.params\n    const {posts} = this.props\n    const searchPosts = posts.filter((post) => {\n      const search = input.toLowerCase()\n      const user = JSON.stringify(post['user.username'].toLowerCase())\n      const content = JSON.stringify(post.content.toLowerCase())\n      const title = JSON.stringify(post.title.toLowerCase())\n\n      if(content.includes(search) || title.includes(search) || user.includes(search)) {\n        return true\n      }\n    })\n    if(Object.keys(searchPosts).length === 0) {\n      return(\n        <h1>Sorry we couldn't find anything!</h1>\n      )\n    }\n\n    const postItems = searchPosts.map(post => (\n      <div key={post.id}>\n        <Media className=\"content-section\">\n          <div style={{display: 'flex', flexDirection: 'column'}}>\n            {this.renderProfileImage(post['user.image_file'])}\n          </div>\n          <Media.Body>\n            <div className=\"article-metadata\">\n              <Link className=\"mr-2\" to={`/user_posts/${post['user.username']}`}>{post['user.username']}</Link>\n              {this.renderDatePosted(post.date_posted)}\n            </div>\n            <h2><Link className=\"article-title\" to={`/post/${post.id}`}>{post.title}</Link></h2>\n            <hr />\n            {this.renderArticleContent(post.content, post.id)}\n          </Media.Body>\n        </Media>\n      </div>\n      ))\n    return postItems.slice(0, postsViewable)\n  }\n\n  renderMorePosts(event) {\n    const target = event.target\n    const {postsViewable} = this.state\n    const {posts} = this.props\n\n    if(target.scrollHeight - target.scrollTop === target.clientHeight && postsViewable !== posts.length) {\n      this.setState({\n        postsViewable: postsViewable + 2\n      }, () => {console.log(postsViewable)})\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderLoader()}\n        <div className=\"scrolling\" onScroll={(event) => this.renderMorePosts(event)}>\n          {this.renderPostContent()}\n        </div>\n      </div>\n    )\n  }\n}\n\nSearchPosts.propTypes = {\n  fetchPosts: Proptypes.func.isRequired,\n  posts: Proptypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n})\n\nexport default compose(withRouter, connect(mapStateToProps, { fetchPosts }))(SearchPosts)","import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport { Provider } from 'react-redux'\nimport store from './components/store.js'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Navigation from  './components/nav.js'\nimport About from './components/about.js'\nimport Sidebar from './components/sidebar.js'\nimport Register from './components/register.js'\nimport Login from './components/login.js'\nimport Logout from './components/logout.js'\nimport Account from './components/account.js'\nimport Posts from './components/posts.js'\nimport UserPosts from './components/userPosts.js'\nimport SinglePost from './components/singlePost.js'\nimport NewPost from './components/newPost.js'\nimport UpdatePost from './components/updatePost.js'\nimport ForgotPassword from './components/forgotPassword.js'\nimport ResetPassword from './components/resetPassword.js'\nimport Rules from './components/rules.js'\nimport Resources from './components/resources.js'\nimport SearchPosts from './components/searchPosts.js'\n\nimport './main.css'\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row'\nimport Alert from 'react-bootstrap/Alert'\n\n\nfunction App() {\n  const [authorization, setAuthorization] = useState(false)\n  const [alert, setAlert] = useState(false)\n  const [alertText, setAlertText] = useState('Welcome!')\n\n  const loginMessage = localStorage.getItem(\"loginMessage\")\n  const token = localStorage.getItem(\"token\")\n\n  useEffect(() => {\n    userAuthenticated()\n  }, [authorization || !token])\n\n  function renderAlert() {\n    if(alert && authorization && loginMessage) {\n      setTimeout(() => {\n        setAlert(false)\n        setAlertText(\"Welcome!\")\n        localStorage.removeItem(\"loginMessage\")\n      }, 5000)\n      return(\n        <Alert className=\"alert-home\" variant=\"success\">\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  async function userAuthenticated() {\n    if(!token) {\n      setAuthorization(false)\n    } else {\n      try {\n        const res = await axios({\n          method: 'get',\n          url: '/api/verify_jwt',\n          headers: {\n            \"x-access-token\": localStorage.getItem(\"token\")\n          }\n        })\n        if(res.status === 200) {\n          setAuthorization(true)\n          setAlert(true)\n          setAlertText('Login Successful! Welcome Back!')\n        } else {\n          console.log('Token is invalid')\n          localStorage.removeItem(\"token\")\n        }\n      } catch {\n        console.log('could not connect to authorization check')\n        localStorage.removeItem(\"token\")\n      }\n    }\n  }\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"main-body\">\n          <Navigation authorization={authorization}/>\n          <Container>\n              <Row>\n                <div className=\"col-md-8\">\n                  {renderAlert()}\n                  <Switch>\n                    <Route exact path=\"/\">\n                      <Posts authorization={authorization} />\n                    </Route>\n                    <Route path=\"/home\">\n                      <Posts authorization={authorization} />\n                    </Route>\n                    <Route path=\"/search/:input\">\n                      <SearchPosts />\n                    </Route>\n                    <Route path=\"/user_posts/:username\">\n                      <UserPosts authorization={authorization} />\n                    </Route>\n                    <Route path=\"/post/:id\">\n                      <SinglePost authorization={authorization} />\n                    </Route>\n                    <Route path=\"/update/post/:id\">\n                      <UpdatePost />\n                    </Route>\n                    <Route path=\"/about\">\n                      <About />\n                    </Route>\n                    <Route path=\"/rules\">\n                      <Rules />\n                    </Route>\n                    <Route path=\"/resources\">\n                      <Resources />\n                    </Route>\n                    <Route path=\"/account\">\n                      <Account />\n                    </Route>\n                    <Route path=\"/forgot_password\">\n                      <ForgotPassword />\n                    </Route>\n                    <Route path=\"/reset_password/:token\">\n                      <ResetPassword />\n                    </Route>\n                    <Route path=\"/register\">\n                      <Register />\n                    </Route>\n                    <Route path=\"/new_post\">\n                      <NewPost />\n                    </Route>\n                    <Route path=\"/login\">\n                      <Login />\n                    </Route>\n                    <Route path=\"/logout\">\n                      <Logout />\n                    </Route>\n                  </Switch>\n                </div>\n                <Sidebar />\n              </Row>\n            </Container>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}