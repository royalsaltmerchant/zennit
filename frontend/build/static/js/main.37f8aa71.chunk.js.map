{"version":3,"sources":["actions/types.js","reducers/postReducer.js","reducers/usersReducer.js","reducers/index.js","components/store.js","components/nav.js","components/about.js","components/sidebar.js","components/register.js","components/login.js","components/logout.js","actions/usersActions.js","components/account.js","actions/postActions.js","components/posts.js","components/userPosts.js","components/singlePost.js","components/newPost.js","components/updatePost.js","components/forgotPassword.js","components/resetPassword.js","App.js","index.js"],"names":["FETCH_POSTS","FETCH_USER","initialState","items","item","combineReducers","posts","state","action","type","payload","users","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","Navigation","props","this","authorization","Nav","NavItem","Link","as","to","Navbar","expand","bg","variant","collapseOnSelect","Container","width","height","className","src","alt","Brand","Toggle","aria-controls","Collapse","id","renderNavbarAccountOptions","Component","About","Sidebar","ListGroup","Item","Register","history","useHistory","event","a","preventDefault","push","username","target","value","trim","email","password","axios","method","url","data","res","console","log","Form","onSubmit","handleSubmit","Group","controlId","Label","Control","required","size","placeholder","Text","aria-describedby","muted","Button","Login","useState","setLoginStatus","alert","setAlert","alertType","setAlertType","alertText","setAlertText","status","token","localStorage","setItem","replace","go","response","useEffect","setTimeout","Alert","renderAlert","Logout","removeItem","fetchUser","dispatch","headers","getItem","then","Account","submission","setState","imageFile","imageUpload","files","formData","FormData","append","user","Media","image_file","Body","File","label","accept","name","connect","fetchPosts","Posts","postsViewable","date","formattedDate","require","moment","format","content","length","substr","userImage","map","post","renderProfileImage","renderDatePosted","date_posted","title","renderArticleContent","slice","scrollHeight","scrollTop","clientHeight","onScroll","renderMorePosts","renderPostContent","UserPosts","match","params","filter","withRouter","SinglePost","modalToggle","post_id","postUsername","onClick","handleModalToggle","renderEditButtons","Modal","show","Dialog","Header","Title","Footer","handleDeletePost","NewPost","rows","UpdatePost","handleUpdatePost","defaultValue","ResetPassword","useParams","App","setAuthorization","loginMessage","userAuthenticated","Row","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37f8aa71.chunk.js","sourcesContent":["export const FETCH_POSTS = 'FETCH_POSTS'\nexport const FETCH_USER = 'FETCH_USER'","import { FETCH_POSTS } from '../actions/types.js'\n\nconst initialState = {\n  items: [],\n  item: {}\n}\n\nexport default function(state = initialState, action ) {\n  switch(action.type) {\n    case FETCH_POSTS:\n      return {\n        ...state,\n        items: action.payload\n      }\n    default:\n      return state\n  }\n}","import { FETCH_USER } from '../actions/types.js'\n\nconst initialState = {\n  item: {}\n}\n\nexport default function(state = initialState, action ) {\n  switch(action.type) {\n    case FETCH_USER:\n      return {\n        ...state,\n        item: action.payload\n      }\n    default:\n      return state\n  }\n}","import { combineReducers }from 'redux'\nimport postReducer from './postReducer'\nimport usersReducer from './usersReducer'\n\nexport default combineReducers({\n  posts: postReducer,\n  users: usersReducer\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from '../reducers'\nconst initialState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  rootReducer, \n  initialState,\n  compose(\n    applyMiddleware(...middleware)\n  )\n)\n\nexport default store","import React, { Component } from 'react'\nimport '../main.css'\nimport { Link } from \"react-router-dom\";\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavItem from 'react-bootstrap/NavItem';\nimport Container from 'react-bootstrap/Container'\n\nexport default class Navigation extends Component {\n  constructor(props) {\n    super(props)\n    \n  }\n\n  renderNavbarAccountOptions() {\n    if(this.props.authorization) {\n      return(\n        <Nav>\n          <NavItem >\n            <Nav.Link as={Link} to=\"/new_post\">New Post</Nav.Link>\n          </NavItem>\n          {/* <img class=\"rounded-circle nav-user-img\" src=\"{{ get_image_file(current_user.image_file) }}\" alt=\"\"></img> */}\n          <NavItem>\n            <Nav.Link as={Link} to=\"/account\">Account</Nav.Link>\n          </NavItem>\n          <NavItem>\n            <Nav.Link as={Link} to=\"/logout\">Logout</Nav.Link>\n          </NavItem>\n        </Nav>\n      )\n    } else {\n      return(\n        <Nav>\n          <NavItem >\n            <Nav.Link as={Link} to=\"/login\">Login</Nav.Link>\n          </NavItem>\n          <NavItem>\n            <Nav.Link as={Link} to=\"/register\">Register</Nav.Link>\n          </NavItem>\n        </Nav>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar expand=\"md\" bg=\"color\" variant=\"dark\" collapseOnSelect>\n          <Container>\n            <img\n              width={30}\n              height={30}\n              className=\"zencircle\"\n              src={`https://zennitapp.s3.amazonaws.com/zencircle.png`}\n              alt=\"zennit zen circle\"\n            />\n            <Navbar.Brand as={Link} className=\"mr-4\" to=\"/home\">Zennit</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"navbarToggle\" />\n            <Navbar.Collapse id=\"navbarToggle\">\n              <Nav className=\"mr-auto\">\n                <NavItem>\n                  <Nav.Link as={Link} to=\"/home\">Home</Nav.Link>\n                </NavItem>\n                {/* <NavItem>\n                  <Nav.Link as={Link} to=\"/about\">About</Nav.Link>\n                </NavItem> */}\n              </Nav>\n              {/* <!-- Navbar Right Side --> */}\n              {this.renderNavbarAccountOptions()}\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport '../main.css'\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div>\n        <h1>About Page</h1>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Nav from 'react-bootstrap/Nav'\nimport NavItem from 'react-bootstrap/NavItem'\n\nexport default class Sidebar extends Component {\n  render() {\n    return (\n      <div className=\"col-md-4\">\n        <div className=\"content-section\">\n          <h3>Expedients</h3>\n          <div className='text-muted'>Currently Under Construction\n            <ListGroup>\n              <ListGroup.Item>\n                <Link to=\"/about\">About</Link>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Link to=\"/recent_comments\">Recent Comments</Link>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Link to=\"/users\">Users</Link>\n              </ListGroup.Item>\n              {/* <ListGroup.Item>\n                <Link to=\"/about\">About</Link>\n              </ListGroup.Item> */}\n            </ListGroup>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { useState } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport '../main.css'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport axios from 'axios'\n\nexport default function Register(props) {\n  // const [value, setValue] = useState('')\n  const history = useHistory()\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    history.push(\"/login\")\n    const username = event.target.username.value.trim()\n    const email = event.target.email.value.trim()\n    const password = event.target.password.value\n\n    try {\n      const res = await axios({\n        method: 'post',\n        url: '/api/register',\n        data: {\n          username: username,\n          email: email,\n          password: password\n        }\n      })\n      console.log(res)\n    } catch (error) {\n      console.log(error)\n    }\n    \n  }\n  return (\n    <div>\n      <div className=\"content-section\">\n        <legend className=\"border-bottom mb-4\">Join Zennit!</legend>\n        <Form onSubmit={(event) => handleSubmit(event)}>\n          <Form.Group controlId=\"username\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control required\n              size=\"lg\" \n              type=\"username\" \n              placeholder=\"Username\" />\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control \n              required\n              size=\"lg\"\n              type=\"email\"\n              placeholder=\"Enter email\" />\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control \n              required\n              size=\"lg\" \n              type=\"password\" \n              placeholder=\"Password\" \n              aria-describedby=\"passwordHelpBlock\" />\n            <Form.Text id=\"passwordHelpBlock\" muted>\n              Your password must be 8-20 characters long, contain letters and numbers, and\n              must not contain spaces, special characters, or emoji.\n            </Form.Text>\n          </Form.Group>\n          <Button variant=\"outline-info\" type=\"submit\">\n            Sign Up\n          </Button>\n        </Form>\n      </div>\n      <div className=\"border-top pt-3\">\n        <small className=\"text-muted\">\n          Already Have An Account? <Link className=\"ml-2\" to=\"/login\">Sign In</Link>\n        </small>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";  \nimport axios from 'axios'\n\nimport '../main.css'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\n\nexport default function Login() {\n  const [loginStatus, setLoginStatus] = useState(false)\n  const [alert, setAlert] = useState(false)\n  const [alertType, setAlertType] = useState('warning')\n  const [alertText, setAlertText] = useState('Something went wrong, please try again later!')\n  const history = useHistory()\n\n  useEffect(() => {\n      if(alert) {\n        setTimeout(() => {\n          setAlert(false)\n        }, 5000)\n      }\n  });\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    const email = event.target.email.value.trim()\n    const password = event.target.password.value\n\n    try {\n      const res = await axios({\n        method: 'post',\n        url: '/api/login',\n        data: {\n          email: email,\n          password: password\n        }\n      })\n      console.log(res)\n      if (res.status === 200) {\n        const token = res.data.token\n        localStorage.setItem(\"token\", \"Bearer \" + token)\n        localStorage.setItem(\"loginMessage\", true)\n        setLoginStatus(true)\n        history.replace(\"/\")\n        history.go(\"/\")\n      } else {\n        setLoginStatus(false)\n        setAlert(true)\n        setAlertType('warning')\n        setAlertText('Something went wrong, please try again later!')\n      }\n    } catch (error) {\n      setLoginStatus(false)\n      console.log(error.response)\n      if(error.response.status === 400) {\n        setAlert(true)\n        setAlertType('warning')\n        setAlertText('Incorrect Email or Password')\n      } else {\n        setAlert(true)\n        setAlertType('danger')\n        setAlertText('Something went wrong, please try again later!')\n      }\n    }\n    \n  }\n\n  function renderAlert() {\n    if(alert) {\n      return(\n        <Alert variant={alertType}>\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  return (\n    <div>\n      {renderAlert()}\n      <div className=\"content-section\">\n        <legend className=\"border-bottom mb-4\">Login</legend>\n        <Form onSubmit={(event) => handleSubmit(event)}>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control \n              required\n              size=\"lg\"\n              type=\"email\"\n              placeholder=\"Account Email\" />\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control \n              required\n              size=\"lg\" \n              type=\"password\" \n              placeholder=\"Account Password\" />\n          </Form.Group>\n            <Button variant=\"outline-info\" type=\"submit\">\n              Login\n            </Button>\n            <small className=\"text-muted ml-2\">\n              <Link to=\"/forgot_password\">Forgot Password?</Link>\n            </small>\n        </Form>\n      </div>\n      <div className=\"border-top pt-3\">\n        <small className=\"text-muted\">\n          Need An Account? <Link className=\"ml-2\" to=\"/register\">Sign Up Here!</Link>\n        </small>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Logout() {\n  const history = useHistory()\n\n  useEffect(() => {\n    runLogout()\n  });\n\n  function runLogout() {\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"loginMessage\")\n    history.push(\"/\")\n    history.go(\"/\")\n  }\n  return (\n    <div>\n    </div>\n  )\n}\n","import { FETCH_USER } from './types'\nimport axios from 'axios'\n\nexport const fetchUser = () => dispatch => {\n  axios({\n    method: 'get',\n    url: '/api/get_user',\n    headers: {\n      \"x-access-token\": localStorage.getItem(\"token\")\n    }\n  })\n  .then(res => {\n    console.log(res)\n    dispatch({\n      type: FETCH_USER,\n      payload: res.data\n    })\n  })\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from \"react-router-dom\";\n\n\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fetchUser } from '../actions/usersActions'\n\nimport Media from 'react-bootstrap/Media'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport '../main.css'\n\n\nclass Account extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      alert: false,\n      alertText: 'Something went wrong, please try again later!',\n      alertType: 'warning',\n      submission: false\n    }\n  }\n  \n  componentDidMount() {\n    this.props.fetchUser()\n  }\n\n  // when component re-renders\n  componentDidUpdate() {\n    if(this.state.submission) {\n      this.props.fetchUser()\n      this.setState({\n        submission: false\n      })\n    }\n    if(this.state.alert) {\n      setTimeout(() => {\n        this.setState({\n          alert: false\n        })\n      }, 5000)\n    }\n  }\n\n  renderAlert() {\n    const {alert, alertText, alertType} = this.state\n\n    if(alert) {\n      return(\n        <Alert variant={alertType}>\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault()\n    const email = event.target.email.value.trim()\n    const username = event.target.username.value.trim()\n    const imageFile = event.target.imageUpload.files[0]\n    var formData = new FormData(event.target)\n    formData.append(\"username\", username)\n    formData.append(\"email\", email)\n    formData.append(\"image_file\", imageFile)\n    \n    try {\n      const res = await axios({\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n          'Content-Type': 'multipart/form-data'\n        },\n        method: 'post',\n        url: '/api/update_user',\n        data: formData\n      })\n      if (res.status === 200) {\n        this.setState({\n          alert: true,\n          alertType: 'success',\n          alertText: 'Successfully updated account info!',\n          submission: true\n        })\n      } else {\n        this.setState({\n          alert: true\n        })\n      }\n    } catch (error) {\n      if(error.response) {\n        console.log(error.response)\n        if(error.response.status === 400) {\n          this.setState({\n            alert: true,\n            alertType: 'danger',\n            alertText: 'There was an issue updating your information, please try again later!'\n          })\n        } else if(error.response.status === 500) {\n          this.setState({\n            alert: true\n          })\n        }\n      } else {\n        this.setState({\n          alert: true\n        })\n      }\n    }\n    \n  }\n\n  render() {\n    const {user} = this.props\n    return (\n      <div>\n        {this.renderAlert()}\n        <div className=\"content-section\">\n          <Media>\n            <img\n              width={64}\n              height={64}\n              className=\"rounded-circle account-img\"\n              src={`https://zennitapp.s3.amazonaws.com/${user.image_file}`}\n              alt=\"Current User Profile Avatar\"\n            />\n            <Media.Body>\n              <h2 className=\"account-heading\">{user.username}</h2>\n              <p className=\"text-secondary\">{user.email}</p>\n            </Media.Body>\n          </Media>\n          <legend className=\"border-bottom mb-4\">Account Info</legend>\n          <Form onSubmit={(event) => this.handleSubmit(event)}>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n              <Form.Control \n                size=\"lg\"\n                type=\"email\"\n                placeholder=\"New Email\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"username\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control \n                size=\"lg\" \n                type=\"username\" \n                placeholder=\"New Username\" />\n            </Form.Group>\n            <Form.Group>\n              <Form.File id=\"imageUpload\" label=\"Update Profile Picture\" accept=\".png, .jpg, .jpeg\" aria-describedby=\"imageHelpBlock\" name=\"image_file\" />\n              <Form.Text id=\"imagedHelpBlock\" muted>\n                Your image must be a common format such as: .png .jpg .jpeg\n              </Form.Text>\n            </Form.Group>\n            <Button variant=\"outline-info\" type=\"submit\">\n              Update\n            </Button>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n}\n\nAccount.propTypes = {\n  fetchUser: Proptypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  user: state.users.item\n})\n\nexport default connect(mapStateToProps, { fetchUser })(Account)\n","import { FETCH_POSTS } from './types'\nimport axios from 'axios'\n\nexport const fetchPosts = () => dispatch => {\n  axios({\n    method: 'get',\n    url: '/api/posts',\n  })\n  .then(res => {\n    dispatch({\n      type: FETCH_POSTS,\n      payload: res.data\n    })\n  })\n}","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fetchPosts } from '../actions/postActions'\nimport Media from 'react-bootstrap/Media'\nimport '../main.css'\n\nclass Posts extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      postsViewable: 4\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchPosts()\n  }\n\n  renderDatePosted(date) {\n    var moment = require('moment')\n    const formattedDate = moment(date).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")\n\n    return <small className=\"text-muted\">{formattedDate}</small>\n  }\n\n  renderArticleContent(content, id) {\n    if (content.length > 1000) {\n      return(\n        <div>\n          <p className=\"article-content\">{content.substr(0, 1000)}</p>\n          <Link className=\"mr-2\" to={`/post/${id}`}>Read More</Link>\n        </div>\n      )\n    } else {\n      return(\n        <div>\n          <p className=\"article-content\">{content}</p>\n        </div>\n      )\n    }\n  }\n\n  renderProfileImage(userImage) {\n    return <img className=\"rounded-circle article-img\" src={`https://zennitapp.s3.amazonaws.com/${userImage}`} alt=\"\" />\n  }\n\n  renderPostContent() {\n    const {postsViewable} = this.state\n    const postItems = this.props.posts.map(post => (\n      <Media className=\"content-section\" key={post.id}>\n        {this.renderProfileImage(post['user.image_file'])}\n        <Media.Body>\n          <div className=\"article-metadata\">\n            <Link className=\"mr-2\" to={`/user_posts/${post['user.username']}`}>{post['user.username']}</Link>\n            {this.renderDatePosted(post.date_posted)}\n          </div>\n          <h2><Link className=\"article-title\" to={`/post/${post.id}`}>{post.title}</Link></h2>\n          {this.renderArticleContent(post.content, post.id)}\n        </Media.Body>\n      </Media>\n      ))\n    return postItems.slice(0, postsViewable)\n  }\n\n  renderMorePosts(event) {\n    const target = event.target\n    const {postsViewable} = this.state\n    const {posts} = this.props\n\n    if(target.scrollHeight - target.scrollTop === target.clientHeight && postsViewable !== posts.length) {\n      this.setState({\n        postsViewable: postsViewable + 2\n      }, () => {console.log(postsViewable)})\n    }\n  }\n\n  render() {\n    \n    return (\n      <div className=\"scrolling\" onScroll={(event) => this.renderMorePosts(event)}>\n        <h1>Home</h1>\n        {this.renderPostContent()}\n      </div>\n    )\n  }\n}\n\nPosts.propTypes = {\n  fetchPosts: Proptypes.func.isRequired,\n  posts: Proptypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items\n})\n\nexport default connect(mapStateToProps, { fetchPosts })(Posts)","import React, { Component } from 'react'\nimport { Link, withRouter } from \"react-router-dom\";\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { fetchPosts } from '../actions/postActions'\nimport Media from 'react-bootstrap/Media'\nimport '../main.css'\n\nclass UserPosts extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      postsViewable: 2\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchPosts()\n  }\n\n  renderDatePosted(date) {\n    var moment = require('moment')\n    const formattedDate = moment(date).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")\n\n    return <small className=\"text-muted\">{formattedDate}</small>\n  }\n\n  renderArticleContent(content, id) {\n    if (content.length > 1000) {\n      return(\n        <div>\n          <p className=\"article-content\">{content.substr(0, 1000)}</p>\n          <Link className=\"mr-2\" to={`/post/${id}`}>Read More</Link>\n        </div>\n      )\n    } else {\n      return(\n        <div>\n          <p className=\"article-content\">{content}</p>\n        </div>\n      )\n    }\n  }\n\n  renderProfileImage(userImage) {\n    return <img className=\"rounded-circle article-img\" src={`https://zennitapp.s3.amazonaws.com/${userImage}`} alt=\"\" />\n  }\n\n  renderPostContent() {\n    const {postsViewable} = this.state\n    const {username} = this.props.match.params\n    const {posts} = this.props\n    const userPosts = posts.filter((post) => {\n      if(post['user.username'] === username) {\n        return true\n      }\n    })\n    const postItems = userPosts.map(post => (\n      <Media className=\"content-section\" key={post.id}>\n        {this.renderProfileImage(post['user.image_file'])}\n        <Media.Body>\n          <div className=\"article-metadata\">\n            <Link className=\"mr-2\" to={`/user_posts/${post['user.username']}`}>{post['user.username']}</Link>\n            {this.renderDatePosted(post.date_posted)}\n          </div>\n          <h2><Link className=\"article-title\" to={`/post/${post.id}`}>{post.title}</Link></h2>\n          {this.renderArticleContent(post.content, post.id)}\n        </Media.Body>\n      </Media>\n      ))\n    return postItems.slice(0, postsViewable)\n  }\n\n  renderMorePosts(event) {\n    const target = event.target\n    const {postsViewable} = this.state\n    const {posts} = this.props\n\n    if(target.scrollHeight - target.scrollTop === target.clientHeight && postsViewable !== posts.length) {\n      this.setState({\n        postsViewable: postsViewable + 2\n      }, () => {console.log(postsViewable)})\n    }\n  }\n\n  render() {\n    const {username} = this.props.match.params\n    return (\n      <div className=\"scrolling\" onScroll={(event) => this.renderMorePosts(event)}>\n        <h1>{username}</h1>\n        {this.renderPostContent()}\n      </div>\n    )\n  }\n}\n\nUserPosts.propTypes = {\n  fetchPosts: Proptypes.func.isRequired,\n  posts: Proptypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items\n})\n\nexport default compose(withRouter,connect(mapStateToProps, { fetchPosts }))(UserPosts)","import React, { Component } from 'react'\nimport { Link, withRouter } from \"react-router-dom\";\nimport axios from 'axios'\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { fetchPosts } from '../actions/postActions'\nimport { fetchUser } from '../actions/usersActions'\n\nimport Media from 'react-bootstrap/Media'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Alert from 'react-bootstrap/Alert'\nimport '../main.css'\n\nclass SinglePost extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      modalToggle: false,\n      alert: false,\n      alertText: 'Something went wrong, please try again later!',\n      alertType: 'warning'\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchPosts()\n    if(localStorage.getItem(\"token\")) {\n      this.props.fetchUser()\n    }\n  }\n\n  componentDidUpdate() {\n    const {alert} = this.state\n\n    if(alert) {\n      setTimeout(() => {\n        this.setState({\n          alert: false\n        })\n      }, 5000)\n    }\n  }\n\n  renderAlert() {\n    const {alert, alertType, alertText} = this.state\n\n    if(alert) {\n      return(\n        <Alert variant={alertType}>\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  handleModalToggle() {\n    const {modalToggle} = this.state\n    this.setState({\n      modalToggle: !modalToggle\n    })\n  }\n\n  async handleDeletePost() {\n    const {id} = this.props.match.params\n\n    try {\n      const res = await axios({\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        method: 'post',\n        url: '/api/delete_post',\n        data: {\n          post_id: id\n        }\n      })\n      console.log(res)\n      if (res.status === 200) {\n        localStorage.setItem(\"deletePost\", true)\n        this.props.history.replace(\"/\")\n      } else {\n        this.setState({\n          alert: true\n        })\n      }\n    } catch (error) {\n      console.log(error.response)\n      this.setState({\n        alert: true\n      })\n    }\n  }\n\n  renderDatePosted(date) {\n    var moment = require('moment')\n    const formattedDate = moment(date).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")\n\n    return <small className=\"text-muted\">{formattedDate}</small>\n  }\n\n  renderProfileImage(userImage) {\n    return <img className=\"rounded-circle article-img\" src={`https://zennitapp.s3.amazonaws.com/${userImage}`} alt=\"\" />\n  }\n\n  renderEditButtons(postUsername) {\n    const {username} = this.props.user\n    const {id} = this.props.match.params\n\n    if(username === postUsername && localStorage.getItem(\"token\")) {\n      return(\n        <div>\n          <Button as={Link} className=\"mt-1 mb-1\" size=\"sm\" to={`/update/post/${id}`}>Update</Button>\n          <Button onClick={() => this.handleModalToggle()} className=\"m-1\" variant=\"danger\" size=\"sm\">Delete</Button>\n        </div>\n      )\n    }\n  }\n\n  renderPostContent() {\n    const {id} = this.props.match.params\n    const {posts} = this.props\n    const postsById = posts.filter((post) => {\n      if(post.id == id) {\n        return true\n      }\n    })\n    const postItems = postsById.map(post => (\n      <Media className=\"content-section\" key={post.id}>\n        {this.renderProfileImage(post['user.image_file'])}\n        <Media.Body>\n          <div className=\"article-metadata\">\n            <Link className=\"mr-2\" to={`/user_posts/${post['user.username']}`}>{post['user.username']}</Link>\n            {this.renderDatePosted(post.date_posted)}\n            {this.renderEditButtons(post['user.username'])}\n          </div>\n          <h2><Link className=\"article-title\" to={`/post/${post.id}`}>{post.title}</Link></h2>\n          <p className=\"article-content\">{post['content']}</p>\n        </Media.Body>\n      </Media>\n      ))\n    return postItems\n  }\n\n  render() {\n    const {modalToggle} = this.state\n\n    return (\n      <div>\n        {this.renderAlert()}\n        {this.renderPostContent()}\n        {/* <!-- Modal --> */}\n        <Modal className=\"fade\" show={modalToggle}>\n          <Modal.Dialog>\n            <Modal.Header>\n              <Modal.Title>Delete Post?</Modal.Title>\n              <Button onClick={() => this.handleModalToggle()} variant=\"close\">\n                <span>&times;</span>\n              </Button>\n            </Modal.Header>\n            <Modal.Footer>\n              <Button onClick={() => this.handleModalToggle()} variant=\"secondary\">Close</Button>\n              <Button onClick={() => this.handleDeletePost()} variant=\"danger\" value=\"delete\" type=\"submit\">Delete</Button>\n            </Modal.Footer>\n          </Modal.Dialog>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nSinglePost.propTypes = {\n  fetchPosts: Proptypes.func.isRequired,\n  posts: Proptypes.array.isRequired,\n  fetchUser: Proptypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  user: state.users.item\n})\n\nexport default compose(withRouter,connect(mapStateToProps, { fetchPosts, fetchUser }))(SinglePost)","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from 'axios'\n\nimport '../main.css'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\n\nexport default function NewPost() {\n  const [alert, setAlert] = useState(false)\n  const [alertText, setAlertText] = useState('Something went wrong, please try again later!')\n  const history = useHistory()\n\n  useEffect(() => {\n    // localStorage.removeItem(\"loginMessage\")\n    if(alert) {\n      if(alert) {\n        setTimeout(() => {\n          setAlert(false)\n        }, 5000)\n      }\n    }\n  });\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    const title = event.target.title.value.trim()\n    const content = event.target.content.value.trim()\n\n    try {\n      const res = await axios({\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        method: 'post',\n        url: '/api/new_post',\n        data: {\n          title: title,\n          content: content\n        }\n      })\n      console.log(res)\n      if (res.status === 201) {\n        localStorage.setItem(\"newPost\", true)\n        history.replace(\"/\")\n      } else {\n        setAlert(true)\n      }\n    } catch (error) {\n      console.log(error.response)\n      setAlert(true)\n    }\n    \n  }\n\n  function renderAlert() {\n    if(alert) {\n      return(\n        <Alert variant=\"danger\">\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  return (\n    <div>\n      {renderAlert()}\n      <div className=\"content-section\">\n        <legend className=\"border-bottom mb-4\">New Post</legend>\n          <Form onSubmit={(event) => handleSubmit(event)}>\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control \n                required\n                size=\"lg\"\n                type=\"title\"\n                placeholder=\"Post Title\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Content</Form.Label>\n              <Form.Control \n                required\n                as=\"textarea\"\n                rows=\"10\"\n                size=\"lg\" \n                type=\"content\" \n                placeholder=\"Post Content\" />\n            </Form.Group>\n              <Button variant=\"outline-info\" type=\"submit\">\n                Post\n              </Button>\n          </Form>\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport { Link, withRouter } from \"react-router-dom\";\nimport axios from 'axios'\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { fetchPosts } from '../actions/postActions'\nimport { fetchUser } from '../actions/usersActions'\n\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport Form from 'react-bootstrap/Form'\nimport '../main.css'\n\nclass UpdatePost extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      modalToggle: false,\n      alert: false,\n      alertText: 'Something went wrong, please try again later!',\n      alertType: 'warning'\n    }\n  }\n\n  componentDidMount() {\n    this.props.fetchPosts()\n    this.props.fetchUser()\n  }\n\n  componentDidUpdate() {\n    const {alert} = this.state\n\n    if(alert) {\n      setTimeout(() => {\n        this.setState({\n          alert: false\n        })\n      }, 5000)\n    }\n  }\n\n  renderAlert() {\n    const {alert, alertType, alertText} = this.state\n\n    if(alert) {\n      return(\n        <Alert variant={alertType}>\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  async handleUpdatePost(event) {\n    event.preventDefault()\n    const {id} = this.props.match.params\n    const title = event.target.title.value.trim()\n    const content = event.target.content.value.trim()\n\n    try {\n      const res = await axios({\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\")\n        },\n        method: 'post',\n        url: '/api/update_post',\n        data: {\n          title: title,\n          content: content,\n          post_id: id\n        }\n      })\n      console.log(res)\n      if (res.status === 200) {\n        localStorage.setItem(\"updatePost\", true)\n        this.props.history.replace(\"/\")\n      } else {\n        this.setState({\n          alert: true\n        })\n      }\n    } catch (error) {\n      console.log(error.response)\n      this.setState({\n        alert: true\n      })\n    }\n  }\n\n  renderPostContent() {\n    const {id} = this.props.match.params\n    const {posts} = this.props\n    const postsById = posts.filter((post) => {\n      if(post.id == id) {\n        return true\n      }\n    })\n    const updatePostForm = postsById.map(post => (\n      <div className=\"content-section\" key={post.id}>\n          <legend className=\"border-bottom mb-4\">{post.title}</legend>\n          <Form onSubmit={(event) => this.handleUpdatePost(event)}>\n            <Form.Group controlId=\"title\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control \n                required\n                size=\"lg\"\n                type=\"title\"\n                defaultValue={post.title} />\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>Content</Form.Label>\n              <Form.Control \n                required\n                as=\"textarea\"\n                rows=\"10\"\n                size=\"lg\" \n                type=\"content\" \n                defaultValue={post.content} />\n            </Form.Group>\n              <Button variant=\"outline-info\" type=\"submit\">\n                Update\n              </Button>\n          </Form>\n        </div>\n    ))\n    return updatePostForm\n  }\n\n  render() {\n\n    return (\n      <div>\n        {this.renderAlert()}\n        {this.renderPostContent()}\n        \n    </div>\n    )\n  }\n}\n\nUpdatePost.propTypes = {\n  fetchPosts: Proptypes.func.isRequired,\n  posts: Proptypes.array.isRequired,\n  fetchUser: Proptypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  user: state.users.item\n})\n\nexport default compose(withRouter,connect(mapStateToProps, { fetchPosts, fetchUser }))(UpdatePost)","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";  \nimport axios from 'axios'\n\nimport '../main.css'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\n\nexport default function Login() {\n  const [loginStatus, setLoginStatus] = useState(false)\n  const [alert, setAlert] = useState(false)\n  const [alertText, setAlertText] = useState('Something went wrong, please try again later!')\n  const [alertType, setAlertType] = useState('warning')\n  const history = useHistory()\n\n  useEffect(() => {\n      if(alert) {\n        setTimeout(() => {\n          setAlert(false)\n        }, 9000)\n      }\n  });\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    const email = event.target.email.value.trim()\n\n    try {\n      const res = await axios({\n        method: 'post',\n        url: '/api/request_reset_email',\n        data: {\n          email: email\n        }\n      })\n      console.log(res)\n      if (res.status === 200) {\n        setAlert(true)\n        setAlertType('success')\n        setAlertText('Request Sent! Check Email For Password Reset Link!')\n      } else {\n        setAlert(true)\n        setAlertType('warning')\n        setAlertText('Something Went Wrong, Please Try Again Later!')\n      }\n    } catch (error) {\n      console.log(error.response)\n      if(error.response.status === 400) {\n        setAlert(true)\n        setAlertType('warning')\n        setAlertText('No User Found By This Email! Try Again!')\n      } else {\n        setAlert(true)\n        setAlertType('danger')\n        setAlertText('Something Went Wrong, Please Try Again Later!')\n      }\n    }\n    \n  }\n\n  function renderAlert() {\n    if(alert) {\n      return(\n        <Alert variant={alertType}>\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  return (\n    <div>\n      {renderAlert()}\n      <div className=\"content-section\">\n        <legend className=\"border-bottom mb-4\">Reset Password</legend>\n        <Form onSubmit={(event) => handleSubmit(event)}>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control \n              required\n              size=\"lg\"\n              type=\"email\"\n              placeholder=\"Account Email\" />\n          </Form.Group>\n            <Button variant=\"outline-info\" type=\"submit\">\n              Request Password Reset\n            </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useParams } from \"react-router-dom\";  \nimport axios from 'axios'\n\nimport '../main.css'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\n\nexport default function ResetPassword() {\n  const [alert, setAlert] = useState(false)\n  const [alertText, setAlertText] = useState('Something went wrong, please try again later!')\n  const [alertType, setAlertType] = useState('warning')\n  const history = useHistory()\n  const {token} = useParams()\n\n  useEffect(() => {\n      if(alert) {\n        setTimeout(() => {\n          setAlert(false)\n        }, 5000)\n      }\n  });\n\n  async function handleSubmit(event) {\n    event.preventDefault()\n    const password = event.target.password.value\n\n    try {\n      const res = await axios({\n        method: 'post',\n        url: '/api/reset_password',\n        data: {\n          password: password,\n          token: token\n        }\n      })\n      console.log(res)\n      if (res.status === 200) {\n        setAlert(true)\n        setAlertType('success')\n        setAlertText('Password Has Been Reset!')\n      } else {\n        setAlert(true)\n        setAlertType('warning')\n        setAlertText('Something Went Wrong, Please Try Again Later!')\n      }\n    } catch (error) {\n      console.log(error)\n      setAlert(true)\n      setAlertType('danger')\n      setAlertText('Something Went Wrong, Please Try Again Later!')\n    }\n    \n  }\n\n  function renderAlert() {\n    if(alert) {\n      return(\n        <Alert variant={alertType}>\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  return (\n    <div>\n      {renderAlert()}\n      <div className=\"content-section\">\n        <legend className=\"border-bottom mb-4\">New Password</legend>\n        <Form onSubmit={(event) => handleSubmit(event)}>\n          <Form.Group controlId=\"password\">\n            <Form.Label>New Password</Form.Label>\n            <Form.Control \n              required\n              size=\"lg\"\n              type=\"password\"\n              placeholder=\"New Password\" />\n          </Form.Group>\n            <Button variant=\"outline-info\" type=\"submit\">\n              Reset Password\n            </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport { Provider } from 'react-redux'\nimport store from './components/store.js'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Navigation from  './components/nav.js'\nimport About from './components/about.js'\nimport Sidebar from './components/sidebar.js'\nimport Register from './components/register.js'\nimport Login from './components/login.js'\nimport Logout from './components/logout.js'\nimport Account from './components/account.js'\nimport Posts from './components/posts.js'\nimport UserPosts from './components/userPosts.js'\nimport SinglePost from './components/singlePost.js'\nimport NewPost from './components/newPost.js'\nimport UpdatePost from './components/updatePost.js'\nimport ForgotPassword from './components/forgotPassword.js'\nimport ResetPassword from './components/resetPassword.js'\n\nimport './main.css'\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row'\nimport Alert from 'react-bootstrap/Alert'\n\n\nfunction App() {\n  const [authorization, setAuthorization] = useState(false)\n  const [alert, setAlert] = useState(false)\n  const [alertText, setAlertText] = useState('Welcome!')\n\n  const loginMessage = localStorage.getItem(\"loginMessage\")\n  const token = localStorage.getItem(\"token\")\n\n  useEffect(() => {\n    userAuthenticated()\n  }, [authorization || !token])\n\n  function renderAlert() {\n    if(alert && authorization && loginMessage) {\n      setTimeout(() => {\n        setAlert(false)\n        setAlertText(\"Welcome!\")\n        localStorage.removeItem(\"loginMessage\")\n      }, 5000)\n      return(\n        <Alert variant=\"success\">\n          {alertText}\n        </Alert>\n      )\n    }\n  }\n\n  async function userAuthenticated() {\n    if(!token) {\n      setAuthorization(false)\n    } else {\n      try {\n        const res = await axios({\n          method: 'get',\n          url: '/api/verify_jwt',\n          headers: {\n            \"x-access-token\": localStorage.getItem(\"token\")\n          }\n        })\n        console.log(res)\n        if(res.status === 200) {\n          setAuthorization(true)\n          setAlert(true)\n          setAlertText('Login Successful! Welcome Back!')\n        } else {\n          console.log('Token is invalid')\n          localStorage.removeItem(\"token\")\n        }\n      } catch {\n        console.log('could not connect to authorization check')\n        localStorage.removeItem(\"token\")\n      }\n    }\n  }\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"main-body\">\n          <Navigation authorization={authorization}/>\n          <Container>\n              <Row>\n                <div className=\"col-md-8\">\n                  {renderAlert()}\n                  <Switch>\n                    <Route exact path=\"/\">\n                      <Posts alert={alert}/>\n                    </Route>\n                    <Route path=\"/home\">\n                      <Posts alert={alert}/>\n                    </Route>\n                    <Route path=\"/user_posts/:username\">\n                      <UserPosts />\n                    </Route>\n                    <Route path=\"/post/:id\">\n                      <SinglePost />\n                    </Route>\n                    <Route path=\"/update/post/:id\">\n                      <UpdatePost />\n                    </Route>\n                    <Route path=\"/about\">\n                      <About />\n                    </Route>\n                    <Route path=\"/account\">\n                      <Account />\n                    </Route>\n                    <Route path=\"/forgot_password\">\n                      <ForgotPassword />\n                    </Route>\n                    <Route path=\"/reset_password/:token\">\n                      <ResetPassword />\n                    </Route>\n                    <Route path=\"/register\">\n                      <Register />\n                    </Route>\n                    <Route path=\"/new_post\">\n                      <NewPost />\n                    </Route>\n                    <Route path=\"/login\">\n                      <Login />\n                    </Route>\n                    <Route path=\"/logout\">\n                      <Logout />\n                    </Route>\n                  </Switch>\n                </div>\n                <Sidebar />\n              </Row>\n            </Container>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}